import{_ as n,c as s,o as a,a as t}from"./app.a8623452.js";var p="/yl/1.jpg";const f='{"title":"ES6  \u7CFB\u5217","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u51FD\u6570\u7684\u6269\u5C55","slug":"\u51FD\u6570\u7684\u6269\u5C55"},{"level":3,"title":"\u7BAD\u5934\u51FD\u6570","slug":"\u7BAD\u5934\u51FD\u6570"},{"level":3,"title":"Function.prototype.toString","slug":"function-prototype-tostring"},{"level":3,"title":"catch \u547D\u4EE4\u7684\u53C2\u6570\u7701\u7565","slug":"catch-\u547D\u4EE4\u7684\u53C2\u6570\u7701\u7565"},{"level":2,"title":"\u6570\u7EC4\u7684\u6269\u5C55","slug":"\u6570\u7EC4\u7684\u6269\u5C55"},{"level":2,"title":"Object","slug":"object"},{"level":3,"title":"Object.hasOwnProperties","slug":"object-hasownproperties"},{"level":2,"title":"\u5B57\u7B26\u4E32\u7684\u65B0\u589E\u65B9\u6CD5","slug":"\u5B57\u7B26\u4E32\u7684\u65B0\u589E\u65B9\u6CD5"},{"level":3,"title":"padStart & padEnd","slug":"padstart-padend"},{"level":3,"title":"trimStart & trimEnd","slug":"trimstart-trimend"},{"level":3,"title":"includes & startsWith & endsWith","slug":"includes-startswith-endswith"},{"level":2,"title":"Set & Map","slug":"set-map"},{"level":3,"title":"Set \u7ED3\u6784","slug":"set-\u7ED3\u6784"},{"level":3,"title":"Map \u7ED3\u6784","slug":"map-\u7ED3\u6784"},{"level":2,"title":"*Promise \u5BF9\u8C61","slug":"promise-\u5BF9\u8C61"},{"level":3,"title":"Promise \u7F3A\u70B9","slug":"promise-\u7F3A\u70B9"},{"level":3,"title":"Promise \u7279\u70B9","slug":"promise-\u7279\u70B9"},{"level":3,"title":"Promise \u6CE8\u610F\u4E8B\u9879","slug":"promise-\u6CE8\u610F\u4E8B\u9879"},{"level":3,"title":"Promise.prototype.then","slug":"promise-prototype-then"},{"level":3,"title":"Promise.prototype.catch","slug":"promise-prototype-catch"},{"level":3,"title":"Promise.prototype.finally","slug":"promise-prototype-finally"},{"level":3,"title":"Promise.resolve","slug":"promise-resolve"},{"level":2,"title":"Reflect \u5BF9\u8C61","slug":"reflect-\u5BF9\u8C61"},{"level":3,"title":"\u8BBE\u8BA1\u76EE\u6807","slug":"\u8BBE\u8BA1\u76EE\u6807"},{"level":3,"title":"Reflect.get","slug":"reflect-get"},{"level":3,"title":"Reflect.set","slug":"reflect-set"},{"level":3,"title":"Reflect.has","slug":"reflect-has"},{"level":3,"title":"Reflect.deleteProperty","slug":"reflect-deleteproperty"},{"level":3,"title":"Reflect.constructor","slug":"reflect-constructor"},{"level":3,"title":"Reflect.getPrototypeOf","slug":"reflect-getprototypeof"},{"level":3,"title":"Reflect.setPrototypeOf","slug":"reflect-setprototypeof"},{"level":3,"title":"Reflect.apply","slug":"reflect-apply"},{"level":3,"title":"Reflect.defineProperty","slug":"reflect-defineproperty"},{"level":3,"title":"Reflect.getOwnPropertyDescriptor","slug":"reflect-getownpropertydescriptor"},{"level":3,"title":"Reflect.isExtensible","slug":"reflect-isextensible"},{"level":3,"title":"Reflect.preventExtension","slug":"reflect-preventextension"},{"level":3,"title":"Reflect.ownKeys","slug":"reflect-ownkeys"},{"level":2,"title":"Proxy","slug":"proxy"},{"level":2,"title":"\u751F\u6210\u5668 & \u8FED\u4EE3\u5668","slug":"\u751F\u6210\u5668-\u8FED\u4EE3\u5668"},{"level":3,"title":"for...of","slug":"for-of"},{"level":3,"title":"Generator.prototype.next()","slug":"generator-prototype-next"},{"level":3,"title":"Generator.prototype.throw()","slug":"generator-prototype-throw"},{"level":3,"title":"Generator.prototype.return()","slug":"generator-prototype-return"},{"level":3,"title":"yield*","slug":"yield"},{"level":3,"title":"\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u7684 Generator \u51FD\u6570","slug":"\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u7684-generator-\u51FD\u6570"},{"level":3,"title":"Generator \u51FD\u6570\u7684 this","slug":"generator-\u51FD\u6570\u7684-this"},{"level":3,"title":"\u5B9E\u9645\u5E94\u7528","slug":"\u5B9E\u9645\u5E94\u7528"},{"level":3,"title":"Generator \u5F02\u6B65","slug":"generator-\u5F02\u6B65"},{"level":2,"title":"Class \u7C7B","slug":"class-\u7C7B"},{"level":3,"title":"getter & setter","slug":"getter-setter"},{"level":3,"title":"class \u8868\u8FBE\u5F0F","slug":"class-\u8868\u8FBE\u5F0F"},{"level":3,"title":"\u9759\u6001\u65B9\u6CD5 & \u9759\u6001\u5C5E\u6027","slug":"\u9759\u6001\u65B9\u6CD5-\u9759\u6001\u5C5E\u6027"},{"level":3,"title":"\u5B9E\u4F8B\u5C5E\u6027\u7684\u65B0\u5199\u6CD5","slug":"\u5B9E\u4F8B\u5C5E\u6027\u7684\u65B0\u5199\u6CD5"},{"level":3,"title":"new.target","slug":"new-target"},{"level":2,"title":"Class \u7EE7\u627F","slug":"class-\u7EE7\u627F"},{"level":3,"title":"super","slug":"super"},{"level":3,"title":"\u539F\u578B\u94FE","slug":"\u539F\u578B\u94FE"},{"level":3,"title":"\u7C7B\u5408\u5E76","slug":"\u7C7B\u5408\u5E76"},{"level":2,"title":"Iterator","slug":"iterator"},{"level":3,"title":"\u90E8\u7F72\u8FED\u4EE3\u5668\u63A5\u53E3","slug":"\u90E8\u7F72\u8FED\u4EE3\u5668\u63A5\u53E3"},{"level":3,"title":"\u8986\u76D6\u9ED8\u8BA4\u8FED\u4EE3\u5668","slug":"\u8986\u76D6\u9ED8\u8BA4\u8FED\u4EE3\u5668"},{"level":3,"title":"\u904D\u5386\u5668\u5BF9\u8C61\u7684 return\u3001throw","slug":"\u904D\u5386\u5668\u5BF9\u8C61\u7684-return\u3001throw"},{"level":3,"title":"for...of","slug":"for-of-1"},{"level":3,"title":"for...in","slug":"for-in"},{"level":2,"title":"async \u51FD\u6570","slug":"async-\u51FD\u6570"},{"level":3,"title":"await","slug":"await"},{"level":3,"title":"\u9519\u8BEF\u5904\u7406","slug":"\u9519\u8BEF\u5904\u7406"},{"level":3,"title":"\u5185\u90E8\u5B9E\u73B0","slug":"\u5185\u90E8\u5B9E\u73B0"},{"level":2,"title":"Modules","slug":"modules"},{"level":3,"title":"export","slug":"export"},{"level":3,"title":"import","slug":"import"},{"level":3,"title":"export default","slug":"export-default"},{"level":3,"title":"export & import \u590D\u5408\u5199\u6CD5","slug":"export-import-\u590D\u5408\u5199\u6CD5"},{"level":3,"title":"\u8DE8\u6A21\u5757\u5E38\u91CF","slug":"\u8DE8\u6A21\u5757\u5E38\u91CF"},{"level":3,"title":"import()","slug":"import-1"}],"relativePath":"yl/learning.md"}',o={},e=t('<h1 id="es6-\u7CFB\u5217" tabindex="-1">ES6 \u7CFB\u5217 <a class="header-anchor" href="#es6-\u7CFB\u5217" aria-hidden="true">#</a></h1><p><img src="'+p+`" alt=""></p><h2 id="\u51FD\u6570\u7684\u6269\u5C55" tabindex="-1">\u51FD\u6570\u7684\u6269\u5C55 <a class="header-anchor" href="#\u51FD\u6570\u7684\u6269\u5C55" aria-hidden="true">#</a></h2><ul><li><p>\u51FD\u6570\u7684 length \u5C5E\u6027\u6307\u7684\u662F\u9884\u671F\u4F20\u5165\u51FD\u6570\u7684\u53C2\u6570\u957F\u5EA6</p></li><li><p>\u5269\u4F59\u53C2\u6570\u672B\u5C3E\u4E0D\u80FD\u63A5\u5176\u4ED6\u53C2\u6570</p></li><li><p>bind \u8FD4\u56DE\u7684\u51FD\u6570\uFF0Cname \u5C5E\u6027\u503C\u4F1A\u52A0\u4E0A bound \u524D\u7F00</p></li></ul><div class="language-js"><pre><code><span class="token comment">// \u6240\u4EE5\u5728\u6A21\u62DF bind \u65B9\u6CD5\u7684\u65F6\u5019\u8FD9\u4E2A\u53EF\u80FD\u662F\u6A21\u62DF\u4E0D\u51FA\u6765\u7684</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name <span class="token comment">// &quot;bound foo&quot;</span>

<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name <span class="token comment">// &quot;bound &quot;</span>
</code></pre></div><h3 id="\u7BAD\u5934\u51FD\u6570" tabindex="-1">\u7BAD\u5934\u51FD\u6570 <a class="header-anchor" href="#\u7BAD\u5934\u51FD\u6570" aria-hidden="true">#</a></h3><p>\u{1F511} \u7BAD\u5934\u51FD\u6570\u7684\u4F5C\u7528\u662F\u4F7F\u5F97\u56DE\u8C03\u51FD\u6570\u7684\u8BED\u6CD5\u66F4\u52A0\u7B80\u6D01</p><div class="language-js"><pre><code>arrayList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u66FF\u6362\u4E86</span>
arrayList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u2757 \u666E\u901A\u51FD\u6570\u5185\u90E8\u7684 this \u6307\u5411\u51FD\u6570\u8FD0\u884C\u65F6\u6240\u5728\u7684\u5BF9\u8C61\uFF0C\u7BAD\u5934\u51FD\u6570\u7684 this \u5C31\u662F | \u5B9A\u4E49\u65F6\u4E0A\u5C42\u4F5C\u7528\u57DF | \u6307\u5411\u7684 this\uFF0C\u4E5F\u5C31\u662F\u8BF4\u7BAD\u5934\u51FD\u6570\u7684 this \u662F\u56FA\u5B9A\u7684\uFF0C\u4E0D\u5141\u8BB8\u901A\u8FC7\u5176\u4ED6\u7C7B\u4F3C call / apply \u7684\u65B9\u5F0F\u8FDB\u884C\u4FEE\u6539\u3002</p><div class="language-js"><pre><code><span class="token comment">// ES6</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;id:&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// ES5</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> _this <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;id:&#39;</span><span class="token punctuation">,</span> _this<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u2757 \u5BF9\u8C61\u4E0D\u6784\u6210\u4F5C\u7528\u57DF\u4F7F\u5F97\u6700\u540E\u4E0B\u9762\u7684 this \u6307\u5411 window</p><div class="language-js"><pre><code><span class="token keyword">const</span> cat <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">lives</span><span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
  <span class="token function-variable function">jumps</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>lives<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="function-prototype-tostring" tabindex="-1">Function.prototype.toString <a class="header-anchor" href="#function-prototype-tostring" aria-hidden="true">#</a></h3><p>\u{1F511} toString \u65B9\u6CD5\u4F1A\u8FD4\u56DE\u51FD\u6570\u4EE3\u7801\u672C\u8EAB\uFF0C\u800C\u4E14\u65B0\u7248\u672C\u7684\u5185\u7F6E\u65B9\u6CD5\u4F1A\u4FDD\u7559\u51FD\u6570\u7684\u6CE8\u91CA</p><h3 id="catch-\u547D\u4EE4\u7684\u53C2\u6570\u7701\u7565" tabindex="-1">catch \u547D\u4EE4\u7684\u53C2\u6570\u7701\u7565 <a class="header-anchor" href="#catch-\u547D\u4EE4\u7684\u53C2\u6570\u7701\u7565" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
<span class="token comment">// \u4EE5\u5F80\u6211\u4EEC\u5728\u5199 try...catch \u7684\u65F6\u5019\u901A\u5E38\u4F1A\u8FD9\u6837\u5B50\u53BB\u5199</span>
<span class="token comment">// \u4F46\u5176\u5B9E\u5F88\u591A\u65F6\u5019\u6211\u4EEC\u662F\u4E0D\u9700\u8981 err \u4F20\u53C2\u7684</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// \u6240\u4EE5\u5728\u65B0\u7248\u4E2D\u6211\u4EEC\u53EF\u4EE5\u50CF\u4E0A\u9762\u4E00\u6837\u53BB\u5199</span>
</code></pre></div><h2 id="\u6570\u7EC4\u7684\u6269\u5C55" tabindex="-1">\u6570\u7EC4\u7684\u6269\u5C55 <a class="header-anchor" href="#\u6570\u7EC4\u7684\u6269\u5C55" aria-hidden="true">#</a></h2><h2 id="object" tabindex="-1">Object <a class="header-anchor" href="#object" aria-hidden="true">#</a></h2><p>\u5BF9\u8C61\u4E00\u4E9B\u65B9\u6CD5\u7684\u96C6\u5408</p><h3 id="object-hasownproperties" tabindex="-1">Object.hasOwnProperties <a class="header-anchor" href="#object-hasownproperties" aria-hidden="true">#</a></h3><p>\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u7531\u6307\u5B9A\u5BF9\u8C61\u7684\u6240\u6709\u81EA\u8EAB\u5C5E\u6027\u7684\u5C5E\u6027\u540D\uFF08\u5305\u62EC\u4E0D\u53EF\u679A\u4E3E\u5C5E\u6027\u4F46\u4E0D\u5305\u62ECSymbol\u503C\u4F5C\u4E3A\u540D\u79F0\u7684\u5C5E\u6027\uFF09\u7EC4\u6210\u7684\u6570\u7EC4.</p><h2 id="\u5B57\u7B26\u4E32\u7684\u65B0\u589E\u65B9\u6CD5" tabindex="-1">\u5B57\u7B26\u4E32\u7684\u65B0\u589E\u65B9\u6CD5 <a class="header-anchor" href="#\u5B57\u7B26\u4E32\u7684\u65B0\u589E\u65B9\u6CD5" aria-hidden="true">#</a></h2><h3 id="padstart-padend" tabindex="-1">padStart &amp; padEnd <a class="header-anchor" href="#padstart-padend" aria-hidden="true">#</a></h3><ul><li><p>\u5B9E\u4F8B\u65B9\u6CD5\uFF1B\u7528\u4E8E\u5728\u5934\u90E8\u8865\u5168\u5B57\u7B26\u4E32</p></li><li><p>\u53C2\u6570\u5217\u8868\uFF1A</p></li></ul><p>\u200B len - \u5B57\u7B26\u4E32\u8865\u5168\u751F\u6210\u7684\u6700\u5927\u957F\u5EA6</p><p>\u200B str - \u7528\u4E8E\u8865\u5168\u7684\u5B57\u7B26\u4E32</p><div class="language-js"><pre><code><span class="token comment">// \u6BD4\u5982\u5728\u5927\u6570\u76F8\u52A0\u4E2D \u4E24\u4E2A\u6570\u7684\u4F4D\u6570\u4E0D\u4E00\u6837\u7684\u65F6\u5019\u9700\u8981\u8FDB\u884C\u5934\u90E8\u8865\u5168</span>
<span class="token keyword">function</span> <span class="token function">bigAdd</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token constant">MAXL</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>length<span class="token punctuation">,</span> b<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    a <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token constant">MAXL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    b <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token constant">MAXL</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token comment">// .......\u8FDB\u884C\u4E0B\u4E00\u6B65\u7684\u7D2F\u52A0\u5904\u7406</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8865\u5168\u7684\u89C4\u5219</p><ul><li>\u5982\u679C\u539F\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u5927\u4E8E\u7B49\u4E8E\u6307\u5B9A\u7684\u957F\u5EA6\uFF0C\u8FD4\u56DE\u539F\u5B57\u7B26\u4E32</li><li>\u5982\u679C\u7528\u4E8E\u8865\u5168\u7684 str \u957F\u5EA6\u548C\u539F\u5B57\u7B26\u4E32\u957F\u5EA6\u7D2F\u52A0\u5927\u4E8E len\uFF0C\u622A\u53D6\u6389\u8D85\u51FA\u957F\u5EA6\u7684 \u90E8\u5206 str \u5B57\u7B26(\u586B\u6EE1\u4E86\u5C31\u884C\u7684\u610F\u601D)</li></ul><hr><h3 id="trimstart-trimend" tabindex="-1">trimStart &amp; trimEnd <a class="header-anchor" href="#trimstart-trimend" aria-hidden="true">#</a></h3><ul><li><p>\u4F5C\u7528\u548C trim \u662F\u4E00\u6837\u7684\uFF0C\u53EA\u662F\u8BF4\u73B0\u5728\u5C06 trim \u5206\u6210\u4E86\u9996\u5C3E\u4E24\u79CD\uFF0C\u53BB\u9996\u5C31\u7528</p><p>trimStart\uFF0C\u53BB\u5C3E\u5C31\u7528 trimEnd\u3002</p></li><li><p>@result\uFF1A\u603B\u662F\u8FD4\u56DE\u65B0\u7684\u5B57\u7B26\u4E32</p></li><li><p>\u9664\u4E86\u7A7A\u683C\u952E\uFF0C\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u5BF9\u5B57\u7B26\u4E32\u5934\u90E8\uFF08\u6216\u5C3E\u90E8\uFF09\u7684 \\t\u3001\\n\u7B49\u4E0D\u53EF\u89C1\u7684\u7A7A\u767D\u7B26\u53F7\u4E5F\u6709\u6548</p></li></ul><hr><h3 id="includes-startswith-endswith" tabindex="-1">includes &amp; startsWith &amp; endsWith <a class="header-anchor" href="#includes-startswith-endswith" aria-hidden="true">#</a></h3><p>\u63D0\u4F9B\u4E86\u4E09\u4E2A\u65B9\u6CD5\u6765\u5224\u65AD\u4E00\u4E2A\u5B57\u7B26\u4E32\u662F\u5426\u5305\u542B\u53E6\u5916\u4E00\u4E2A\u5B57\u7B26\u4E32</p><ul><li>includes : \u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u662F\u5426\u627E\u5230\u4E86\u53C2\u6570\u5B57\u7B26\u4E32</li><li>startsWith\uFF1A\u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u53C2\u6570\u5B57\u7B26\u4E32\u662F\u5426\u5728\u539F\u5B57\u7B26\u4E32\u7684\u5934\u90E8</li><li>endsWith\uFF1A\u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u53C2\u6570\u5B57\u7B26\u4E32\u662F\u5426\u5728\u539F\u5B57\u7B26\u4E32\u7684\u5C3E\u90E8</li></ul><div class="language-js"><pre><code><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;Hello &#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true \u9488\u5BF9\u662F\u524D 6 \u4E2A\u5B57\u7B26</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;hello &#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false \u5927\u5C0F\u5199\u654F\u611F</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true \u4ECE\u7B2C7\u4E2A\u5B57\u7B26\u4E32\u5F00\u59CB\u6BD4\u8F83</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39; world&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre></div><h2 id="set-map" tabindex="-1">Set &amp; Map <a class="header-anchor" href="#set-map" aria-hidden="true">#</a></h2><p>ES6 \u5F15\u51FA\u7684\u65B0\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u672C\u8D28\u4E5F\u662F\u4E3A\u4E86\u8865\u5145 ES5 \u6570\u7EC4\u5BF9\u8C61\u7B49\u5728\u4F7F\u7528\u573A\u666F\u4E0A\u6709\u9650\u7684\u95EE\u9898\u3002</p><h3 id="set-\u7ED3\u6784" tabindex="-1">Set \u7ED3\u6784 <a class="header-anchor" href="#set-\u7ED3\u6784" aria-hidden="true">#</a></h3><p>set \u4F5C\u4E3A\u96C6\u5408\u7684\u4E00\u4E2A\u6982\u5FF5\uFF0C\u91CC\u9762\u4E0D\u5B58\u5728\u76F8\u7B49\u7684\u5143\u7D20\u3002\u5176\u5B9E\u672C\u8D28\u4E0A\u662F\u4F7F\u7528 \u7C7B\u4F3CJS \u7684 === \u7B97\u6CD5\u6765\u8FDB\u884C\u5224\u65AD\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4 -0 \u548C +0 \u5728 === \u662F\u76F8\u7B49\u7684\uFF0C\u90A3\u5C31\u4E0D\u4F1A\u88AB\u91CD\u65B0\u6DFB\u52A0\u5230\u7ED3\u6784\u4E2D\u3002</p><div class="language-js"><pre><code><span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span> <span class="token comment">// JS \u8BA4\u4E3A\u8FD9\u4E2A\u662F false</span>
</code></pre></div><p>\u2757 \u9700\u8981\u6CE8\u610F\u4EE5\u4E0B\u51E0\u70B9</p><ul><li><p>\u5728 set \u4E2D NaN \u548C NaN \u4E0D\u4F1A\u91CD\u590D</p></li><li><p>\u5728 set \u4E2D null \u548C null / undefined \u548C undefined\u4E0D\u4F1A\u91CD\u590D</p></li><li><p>\u5F15\u7528\u7C7B\u578B\u6570\u7EC4\uFF0C\u5BF9\u8C61\u7B49\u5F15\u7528\u7C7B\u578B\u4F1A\u51FA\u73B0\u91CD\u590D(\u56E0\u4E3A\u5B83\u4EEC\u90FD\u662F\u4E0D\u540C\u7684\u5F15\u7528)</p></li></ul><h3 id="map-\u7ED3\u6784" tabindex="-1">Map \u7ED3\u6784 <a class="header-anchor" href="#map-\u7ED3\u6784" aria-hidden="true">#</a></h3><h2 id="promise-\u5BF9\u8C61" tabindex="-1">*Promise \u5BF9\u8C61 <a class="header-anchor" href="#promise-\u5BF9\u8C61" aria-hidden="true">#</a></h2><p>\u{1F511} Promise \u662F\u4E00\u79CD\u5F02\u6B65\u7F16\u7A0B\u7684\u89E3\u51B3\u65B9\u6848\uFF0C\u672C\u8D28\u4E0A\u662F\u4E3A\u4E86\u89E3\u51B3\u4EE5\u524D\u7684\u56DE\u8C03\u5730\u72F1\u7684\u95EE\u9898\u3002</p><h3 id="promise-\u7F3A\u70B9" tabindex="-1">Promise \u7F3A\u70B9 <a class="header-anchor" href="#promise-\u7F3A\u70B9" aria-hidden="true">#</a></h3><ul><li>\u65E0\u6CD5\u53D6\u6D88\uFF0C\u4E00\u65E6\u65B0\u5EFA\u5C31\u4F1A\u7ACB\u5373\u6267\u884C\uFF0C\u65E0\u6CD5\u4E2D\u9014\u53D6\u6D88</li><li>\u5982\u679C\u4E0D\u8BBE\u7F6E\u56DE\u8C03\u51FD\u6570\uFF0CPromise \u5185\u90E8\u629B\u51FA\u7684\u9519\u8BEF\u4E0D\u4F1A\u53CD\u5E94\u5230\u5916\u90E8</li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token punctuation">(</span><span class="token string">&#39;Error&#39;</span><span class="token punctuation">)</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u91CC\u9762\u7684\u8FD9\u4E2A\u9519\u8BEF\u5B8C\u5168\u88AB\u5403\u6389\u4E86\uFF0C\u5BF9\u5916\u90E8\u4E0D\u4EA7\u751F\u4EFB\u4F55\u7684\u5F71\u54CD</span>
<span class="token comment">// \u672C\u8D28\u4E0A\u5176\u5B9E\u662F promise \u5185\u90E8\u8FDB\u884C\u4E86\u4E00\u4E2A try...catch \u7684\u5904\u7406</span>
</code></pre></div><ul><li>\u5F53\u5904\u4E8E pending \u72B6\u6001\u7684\u65F6\u5019\u65E0\u6CD5\u5F97\u51FA\u76EE\u524D\u5904\u4E8E\u54EA\u4E00\u4E2A\u9636\u6BB5(\u521A\u5F00\u59CB/\u5373\u5C06\u5B8C\u6210???)</li></ul><h3 id="promise-\u7279\u70B9" tabindex="-1">Promise \u7279\u70B9 <a class="header-anchor" href="#promise-\u7279\u70B9" aria-hidden="true">#</a></h3><ol><li>\u72B6\u6001\u5355\u4E00\u8F6C\u6362\u9014\u5F84 -- \u53EA\u80FD\u7531\u5185\u90E8\u7684 resolve \u548C reject \u6539\u53D8\uFF0C\u4E0D\u53D7\u5916\u754C\u7684\u5F71\u54CD</li><li>\u72B6\u6001\u4E0D\u53EF\u9006 / \u4E0D\u53EF\u53D8 -- \u4E00\u65E6\u72B6\u6001\u7531 pending \u53D8\u5230 resolve / reject \u5C31\u4E0D\u80FD\u518D\u6B21\u6539\u53D8</li></ol><h3 id="promise-\u6CE8\u610F\u4E8B\u9879" tabindex="-1">Promise \u6CE8\u610F\u4E8B\u9879 <a class="header-anchor" href="#promise-\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a></h3><ul><li>\u5F53\u8FD4\u56DE\u4E00\u4E2A promise \u540E\u72B6\u6001\u76F4\u63A5\u4F9D\u8D56\u4E8E\u8FD4\u56DE\u7684 promise</li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;fail&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// p2 \u7684\u72B6\u6001\u4F9D\u8D56\u4E8Ep1 \u7684\u72B6\u6001</span>
p2
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Error: fail</span>
</code></pre></div><ul><li>\u8C03\u7528 resolve \u6216 reject \u5E76\u4E0D\u4F1A\u7EC8\u7ED3 Promise \u7684\u53C2\u6570\u51FD\u6570\u7684\u6267\u884C\uFF0C\u5982\u4E0B resolve \u4E86\u4EE5\u540E\u540E\u9762\u7684\u4EE3\u7801\u90FD\u4F1A\u6267\u884C\uFF0C\u6240\u4EE5\u4FDD\u9669\u5730\u6765\u8BF4\u6211\u4EEC\u4E00\u822C\u4F1A\u5728 resolve \u540E\u52A0\u4E0A return \u4FDD\u8BC1\u5F53\u524D promise \u5185\u90E8\u7684\u6267\u884C\u5B8C\u6210</li></ul><div class="language-js"><pre><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 2</span>
<span class="token comment">// 1</span>
</code></pre></div><h3 id="promise-prototype-then" tabindex="-1">Promise.prototype.then <a class="header-anchor" href="#promise-prototype-then" aria-hidden="true">#</a></h3><p>then \u65B9\u6CD5\u7684\u4F5C\u7528\u662F\u4E3A Promise \u63D0\u4F9B\u72B6\u6001\u53D8\u6362\u540E\u7684\u56DE\u8C03\u6267\u884C\u3002\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u65B0\u7684 Promise \u5BF9\u8C61\uFF0C\u5982\u679C then \u5185\u90E8 return \u7684\u662F\u4E00\u4E2A\u57FA\u672C\u503C\u7684\u8BDD\uFF0C\u65B0 Promise \u7684\u72B6\u6001\u4F1A\u76F4\u63A5 resolve\uFF1B\u5982\u679C return \u7684\u662F\u4E00\u4E2A Promise\uFF0C\u4F1A\u6267\u884C Promise.then(resolve, reject) \u7684\u64CD\u4F5C\uFF0C\u4E5F\u5C31\u662F\u72B6\u6001\u7684\u53D8\u5316\u5B8C\u5168\u4F9D\u8D56\u4E8E return \u7684 promise\u3002</p><div class="language-js"><pre><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// hello</span>
    <span class="token keyword">return</span> <span class="token string">&#39;world&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// world</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;Sunday&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token comment">// \u6267\u884C\u7684\u65F6\u673A\u4F9D\u8D56\u4E8E\u4E0A\u4E00\u4E2Athen \u8FD4\u56DE\u7684 promise</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// 2000 ms \u540E\u8F93\u51FA Sunday</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="promise-prototype-catch" tabindex="-1">Promise.prototype.catch <a class="header-anchor" href="#promise-prototype-catch" aria-hidden="true">#</a></h3><p>catch \u65B9\u6CD5\u5176\u5B9E\u662F then(null, () =&gt; {}) \u7684\u8868\u73B0\u5F62\u5F0F\uFF0C\u4E5F\u5C31\u662F\u53EA\u6355\u83B7\u9519\u8BEF\u540E\u6267\u884C\u7684\u56DE\u8C03\u51FD\u6570\u3002\u91CC\u9762\u6BD4\u8F83\u91CD\u8981\u7684\u662F\u4E00\u4E2A\u53EB \u201D\u9519\u8BEF\u900F\u4F20\u201C \u7684\u6982\u5FF5\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&#39;err&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;suc1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u900F\u4F20</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;suc2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//\u900F\u4F20</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">reason</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u6355\u83B7</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;suc3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u4F1A\u6267\u884C\u4E0D??? \u4F1A\u7684</span>
<span class="token comment">// \u4E3A\u5565??? \u56E0\u4E3A catch \u5176\u5B9E\u8FD4\u56DE\u7684\u4E5F\u662F\u4E00\u4E2A promise\uFF0C\u6267\u884C\u5B8C\u6210\u72B6\u6001\u4E5F\u5C31\u4F1A\u53D8\u6210 fulfilled</span>
<span class="token comment">// Promise&lt;fulfilled&gt; undefined</span>
</code></pre></div><p>\u5176\u5B9E\u900F\u4F20\u5C31\u662F\u5FFD\u7565\u6389\u4E2D\u95F4\u7ECF\u8FC7\u7684 then \u7136\u540E\u88AB\u7B2C\u4E00\u4E2A catch \u6355\u83B7\u6389.</p><p>\u2757 \u5173\u4E8E promise \u5185\u90E8\u7684\u9519\u8BEF\u5176\u5B9E\u8FD8\u662F\u86EE\u602A\u5F02\u7684(\u8FD9\u4E5F\u662F\u4E3A\u4EC0\u4E48\u4F1A\u6709 generator \u751F\u6210\u5668\u6765\u5904\u7406\u5F02\u6B65\u4EFB\u52A1\u7684\u539F\u56E0\u4E4B\u4E00) -- promise \u5185\u90E8\u4F1A\u5403\u6389\u9519\u8BEF</p><div class="language-js"><pre><code><span class="token comment">// \u5B98\u7F51\u7684\u4E00\u4E2A\u4F8B\u5B50</span>
<span class="token keyword">const</span> <span class="token function-variable function">someAsyncThing</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0B\u9762\u4E00\u884C\u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3Ax\u6CA1\u6709\u58F0\u660E</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">someAsyncThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;everything is great&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught (in promise) ReferenceError: x is not defined</span>
<span class="token comment">// 123</span>
</code></pre></div><p>\u4F46\u662F\u5728 node \u548C\u5728\u6D4F\u89C8\u5668\u4E2D\u6267\u884C\u7684\u7ED3\u679C\u4E0D\u4E00\u81F4\uFF0C\u4E3A\u5565\u5462\uFF1Fnode \u91CC\u9762\u5176\u5B9E\u662F\u505A\u4E86\u8FD9\u4E48\u4E00\u4E2A\u9650\u5236\uFF0C\u4E5F\u5C31\u662F\u5982\u679C promise \u5185\u90E8\u6709\u672A\u6355\u83B7\u7684\u9519\u8BEF\u4F1A\u76F4\u63A5\u7EC8\u6B62\u8FDB\u7A0B(\u672C\u5730\u7684 node \u7248\u672C\u662F V16.13.1 \u53EF\u80FD\u5728\u4F4E\u7248\u672C\u4E2D\u5E76\u4E0D\u4F1A\u5B58\u5728\u8FD9\u6837\u7684\u9650\u5236)</p><h3 id="promise-prototype-finally" tabindex="-1">Promise.prototype.finally <a class="header-anchor" href="#promise-prototype-finally" aria-hidden="true">#</a></h3><p>\u53C2\u6570: callback() \u4E0D\u63A5\u53D7\u4EFB\u4F55\u53C2\u6570</p><ul><li><p>finally \u7B49\u4EF7\u4E8E then(callback, callback)\uFF0C\u4E5F\u5C31\u662F\u65E0\u8BBA promise \u7684\u72B6\u6001\u5982\u4F55\u6539\u53D8\u90FD\u662F\u4F1A\u6267\u884C\u4F20\u5165\u7684callback \u51FD\u6570\u3002</p></li><li><p>finally \u8FD4\u56DE\u7684\u4E5F\u662F\u4E00\u4E2A promise \u5BF9\u8C61</p><div class="language-js"><pre><code><span class="token comment">// finall</span>
<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">finally</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token constant">P</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>constructor
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    	<span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">P</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> val<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">P</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">throw</span> reason <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div></li></ul><h3 id="promise-resolve" tabindex="-1">Promise.resolve <a class="header-anchor" href="#promise-resolve" aria-hidden="true">#</a></h3><p>\u65B9\u6CD5\u662F\u5C06\u4E00\u4E2A\u53C2\u6570\u5C01\u88C5\u4E3A promise \u72EC\u4EAB\u8FD4\u56DE\u7684\u8FC7\u7A0B\u3002</p><div class="language-js"><pre><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// \u7B49\u4EF7\u4E8E</span>
<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>\u2757 \u9700\u8981\u7279\u522B\u6CE8\u610F resolve \u7684\u53C2\u6570\u4F20\u9012\u7C7B\u578B</p><ol><li>\u53C2\u6570\u662F Promise \u5B9E\u4F8B</li></ol><p>\u200B \u5982\u679C\u53C2\u6570\u662F Promise \u5B9E\u4F8B\uFF0C\u90A3\u4E48Promise.resolve\u5C06\u4E0D\u505A\u4EFB\u4F55\u4FEE\u6539\u3001\u539F\u5C01\u4E0D\u52A8\u5730\u8FD4\u56DE\u8FD9\u4E2A\u5B9E\u4F8B\u3002</p><ol start="2"><li>\u53C2\u6570\u662F thenable \u5BF9\u8C61</li></ol><div class="language-js"><pre><code><span class="token comment">// \u5177\u5907 then \u65B9\u6CD5\u7684\u5BF9\u8C61</span>
<span class="token keyword">let</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">then</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>Promise.resolve()\u65B9\u6CD5\u4F1A\u5C06\u8FD9\u4E2A\u5BF9\u8C61\u8F6C\u4E3A Promise \u5BF9\u8C61\uFF0C\u7136\u540E\u5C31\u7ACB\u5373\u6267\u884Cthenable\u5BF9\u8C61\u7684then()\u65B9\u6CD5\u3002</p><ol start="3"><li>\u53C2\u6570\u4E0D\u662F\u5177\u5907 then() \u65B9\u6CD5\u7684\u5BF9\u8C61\uFF0C\u6216\u6839\u672C\u4E0D\u662F\u5BF9\u8C61</li></ol><p>\u200B \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 promise \u5BF9\u8C61\uFF0C\u72B6\u6001\u4E3A resolve\uFF0C\u4F20\u9012\u7684\u503C\u5C31\u662F Promise.resolve \u51FA\u53BB\u7684\u503C</p><div class="language-js"><pre><code><span class="token keyword">const</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
<span class="token comment">/*
	promise \u7684\u6570\u636E\u7C7B\u578B Promise&lt;fulfilled&gt; \u503C\u662F &#39;hello&#39;
*/</span>
</code></pre></div><ol start="4"><li>\u53C2\u6570\u662F\u4E00\u4E2A\u51FD\u6570</li></ol><p>\u200B \u4F1A\u5148\u6267\u884C\u51FD\u6570\uFF0C\u7136\u540E\u5C06\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u4F5C\u4E3A\u65B0 promise \u5BF9\u8C61\u7684\u503C</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;jzy&#39;</span>
    <span class="token comment">// \u6CA1\u6709\u5C31\u662F\u8FD4\u56DE undefined</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> promise <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">// jzy || undefined</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="reflect-\u5BF9\u8C61" tabindex="-1">Reflect \u5BF9\u8C61 <a class="header-anchor" href="#reflect-\u5BF9\u8C61" aria-hidden="true">#</a></h2><p>Reflect \u662F ES6 \u5F15\u51FA\u7528\u6765\u64CD\u4F5C\u5BF9\u8C61\u7684 API\u3002</p><p>\u5173\u952E\u5B57\uFF1A\u5BF9\u8C61\u76F8\u540C\u884C\u4E3A\uFF1B\u51FD\u6570\u5F0F\u7F16\u7A0B</p><h3 id="\u8BBE\u8BA1\u76EE\u6807" tabindex="-1">\u8BBE\u8BA1\u76EE\u6807 <a class="header-anchor" href="#\u8BBE\u8BA1\u76EE\u6807" aria-hidden="true">#</a></h3><ul><li>\u62BD\u53D6 Object \u5BF9\u8C61\u5185\u4E00\u4E9B\u5185\u90E8\u65B9\u6CD5</li><li>\u4FEE\u6539\u67D0\u4E9B Object \u65B9\u6CD5\u7684\u8FD4\u56DE\u7ED3\u679C\u4F7F\u5176\u53D8\u5F97\u66F4\u5408\u7406</li><li>\u8BA9 Object \u64CD\u4F5C\u53D8\u6210\u51FD\u6570\u5F0F\u884C\u4E3A</li><li>\u63D0\u4F9B\u4E0E proxy \u4E00\u81F4\u7684\u51FD\u6570\u7B7E\u540D</li></ul><h3 id="reflect-get" tabindex="-1">Reflect.get <a class="header-anchor" href="#reflect-get" aria-hidden="true">#</a></h3><p>Reflect.get(target, name, receiver)</p><ul><li>\u8FD4\u56DE target \u5BF9\u8C61\u7684 name \u5C5E\u6027</li></ul><div class="language-js"><pre><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token keyword">get</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bar<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> tar <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">4</span>
<span class="token punctuation">}</span>


console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">,</span> tar<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 7</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> tar<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> tar<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// TypeError: Reflect.get called on non-object</span>
</code></pre></div><p>\u2B50 \u6709\u4E24\u4E2A\u9700\u8981\u6CE8\u610F\u7684\u5730\u65B9</p><ul><li>\u5982\u679C target \u4F20\u5165\u7684\u662F\u975E\u5BF9\u8C61\uFF0C\u4F1A\u62A5\u9519</li><li>name \u90E8\u7F72\u4E86 get \u65B9\u6CD5\u4E14\u5728\u5B58\u5728 receiver \u7684\u60C5\u51B5\u4E0B ---&gt; get \u65B9\u6CD5\u7684 this \u4F1A\u6307\u5411 receiver</li></ul><h3 id="reflect-set" tabindex="-1">Reflect.set <a class="header-anchor" href="#reflect-set" aria-hidden="true">#</a></h3><p>Reflect.set(target, name, value, receiver)</p><ul><li>\u8BBE\u7F6E target \u5C5E\u6027\u7684 name \u7B49\u4E8E value</li></ul><div class="language-js"><pre><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token keyword">set</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> myReceiverObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F20\u5165 receiver\uFF0Cset \u65B9\u6CD5\u7684 this \u6307\u5411\u7684\u5C31\u662F myReceiverObject</span>
<span class="token comment">// \u5BF9 this.foo \u7684\u4FEE\u6539\u5176\u5B9E\u5C31\u662F\u5BF9 myReceiverObject.foo \u7684\u4FEE\u6539</span>
Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> myReceiverObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
myObject<span class="token punctuation">.</span>foo <span class="token comment">// 4</span>
myReceiverObject<span class="token punctuation">.</span>foo <span class="token comment">// 1</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// target \u6307\u7684\u662F\u7ED1\u5B9A\u4EE3\u7406\u7684\u76EE\u6807\u4E5F\u5C31\u662F p</span>
    <span class="token comment">// receiver \u6307\u7684\u662F proxy \u5B9E\u4F8B\u4E5F\u5C31\u662F ooo</span>
    <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> ooo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u2B50 \u6709\u4E24\u4E2A\u9700\u8981\u6CE8\u610F\u7684\u5730\u65B9(\u4E0E get \u662F\u7C7B\u4F3C\u7684)</p><ul><li>\u5982\u679C target \u4F20\u5165\u7684\u662F\u975E\u5BF9\u8C61\uFF0C\u4F1A\u62A5\u9519</li><li>name \u90E8\u7F72\u4E86 set\u65B9\u6CD5\u4E14\u5728\u5B58\u5728 receiver \u7684\u60C5\u51B5\u4E0B ---&gt; set \u65B9\u6CD5\u7684 this \u4F1A\u6307\u5411 receiver</li></ul><h3 id="reflect-has" tabindex="-1">Reflect.has <a class="header-anchor" href="#reflect-has" aria-hidden="true">#</a></h3><p>Reflect.has(obj, name)</p><div class="language-js"><pre><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span>
<span class="token comment">// &#39;foo&#39; in obj === Reflect.has(obj, &#39;foo&#39;)</span>
</code></pre></div><h3 id="reflect-deleteproperty" tabindex="-1">Reflect.deleteProperty <a class="header-anchor" href="#reflect-deleteproperty" aria-hidden="true">#</a></h3><p>Reflect.deleteProperty(obj, name)</p><div class="language-js"><pre><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
<span class="token punctuation">}</span>
<span class="token comment">// delete obj.foo === Reflect.deleteProperty(obj, &#39;foo&#39;)</span>
</code></pre></div><h3 id="reflect-constructor" tabindex="-1">Reflect.constructor <a class="header-anchor" href="#reflect-constructor" aria-hidden="true">#</a></h3><p>Reflect.constructor(function, args)</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
<span class="token punctuation">}</span>
<span class="token comment">// const p = new Person(&#39;name&#39;)</span>
<span class="token comment">// const p = Reflect.construct(Person, [&#39;name&#39;, &#39;age&#39;])</span>
</code></pre></div><p>\u2B50\u9700\u8981\u6CE8\u610F\u4E24\u70B9</p><ul><li>function \u4F20\u5165\u7684\u5FC5\u987B\u662F\u4E00\u4E2A\u51FD\u6570(\u56E0\u4E3A\u662F new \u884C\u4E3A)</li><li>args \u4F20\u5165\u7684\u5FC5\u987B\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u8868\u793A\u6784\u9020\u51FD\u6570\u7684\u53C2\u6570</li></ul><h3 id="reflect-getprototypeof" tabindex="-1">Reflect.getPrototypeOf <a class="header-anchor" href="#reflect-getprototypeof" aria-hidden="true">#</a></h3><p>Reflect.getPrototypeOf(obj) - \u8BFB\u53D6\u5BF9\u8C61\u7684 <em><em>proto</em>_</em> \u5C5E\u6027</p><div class="language-js"><pre><code><span class="token keyword">const</span> myObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FancyThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E7\u5199\u6CD5</span>
Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>myObj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token class-name">FancyThing</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>

<span class="token comment">// \u65B0\u5199\u6CD5</span>
Reflect<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>myObj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token class-name">FancyThing</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
</code></pre></div><p>\u2B50\u4F20\u5165\u7684 obj \u5FC5\u987B\u4E3A Object \u5BF9\u8C61 \u5426\u5219\u4F1A\u62A5\u9519</p><h3 id="reflect-setprototypeof" tabindex="-1">Reflect.setPrototypeOf <a class="header-anchor" href="#reflect-setprototypeof" aria-hidden="true">#</a></h3><p>Reflect.setPrototypeOf(obj, newProto)</p><ul><li>\u8BBE\u7F6E\u5BF9\u8C61\u7684 _<em>proto_</em> \u5C5E\u6027</li></ul><div class="language-js"><pre><code>Reflect<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
Reflect<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
Reflect<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// TypeError</span>
Reflect<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// TypeError</span>
Reflect<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// TypeError</span>
</code></pre></div><p>\u2B50 \u9700\u8981\u6CE8\u610F\u4E24\u70B9</p><ul><li>obj \u4F20\u5165\u7684\u5FC5\u987B\u662F Object \u5BF9\u8C61</li><li>newProto \u5FC5\u987B\u662F null \u6216\u8005 Object \u5BF9\u8C61</li></ul><h3 id="reflect-apply" tabindex="-1">Reflect.apply <a class="header-anchor" href="#reflect-apply" aria-hidden="true">#</a></h3><p>Reflect.apply(func, thisArg, args)</p><ul><li>\u7ED1\u5B9A thisArg \u540E\u4F20\u5165 args \u6267\u884C func\u51FD\u6570</li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> ages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> youngest <span class="token operator">=</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span>min<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> ages<span class="token punctuation">)</span>
<span class="token comment">// const youngest = Math.min(...ages) // \u4E0D\u4F7F\u7528 apply\u4E5F\u53EF\u4EE5\u4F7F\u7528\u89E3\u6784\u8D4B\u503C\u7684\u65B9\u5F0F</span>
<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>youngest<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>youngest<span class="token punctuation">)</span> <span class="token comment">// 11</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span>  <span class="token comment">// [object Number]</span>
</code></pre></div><p>\u2B50\u9700\u8981\u6CE8\u610F</p><ul><li>func \u4F20\u5165\u7684\u5FC5\u987B\u662F Function</li></ul><h3 id="reflect-defineproperty" tabindex="-1">Reflect.defineProperty <a class="header-anchor" href="#reflect-defineproperty" aria-hidden="true">#</a></h3><p>Reflect.defineProperty(target, propertyKey, attributes)</p><ul><li>\u7B49\u540C\u4E8E Object.defineProperty\uFF0C\u7528\u4E8E\u5B9A\u4E49\u67D0\u4E2A\u5C5E\u6027\u7684 configurable, enumerable, writable, value, get, set\u7B49\uFF0C\u672A\u6765\u4F1A\u66FF\u4EE3 Object.defineProperty</li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;set&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> descriptor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> descriptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">;</span> <span class="token comment">// {value: &quot;bar&quot;, writable: true, enumerable: true, configurable: true}</span>
</code></pre></div><p>\u2B50 set \u548C defineProperty \u7684\u89E6\u53D1\u573A\u666F</p><ul><li>\u5982\u679C\u8BBE\u7F6E\u4E86 set \u65B9\u6CD5\u4E14 Reflect.set \u4E0D\u4F20\u5165 receiver \u5219\u4E0D\u4F1A\u89E6\u53D1 defineProperty</li><li>Reflect.set\u4E00\u65E6\u4F20\u5165receiver\uFF0C\u5C31\u4F1A\u5C06\u5C5E\u6027\u8D4B\u503C\u5230receiver\u4E0A\u9762\uFF0C\u5BFC\u81F4\u89E6\u53D1defineProperty\u62E6\u622A</li></ul><h3 id="reflect-getownpropertydescriptor" tabindex="-1">Reflect.getOwnPropertyDescriptor <a class="header-anchor" href="#reflect-getownpropertydescriptor" aria-hidden="true">#</a></h3><p>Reflect.getOwnPropertyDescriptor(target, propertyKey)</p><ul><li>\u83B7\u53D6\u5BF9\u8C61\u7684 descriptor</li></ul><div class="language-js"><pre><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&#39;hidden&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&#39;hidden&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//  {&quot;value&quot;:true,&quot;writable&quot;:false,&quot;enumerable&quot;:false,&quot;configurable&quot;:false}</span>
</code></pre></div><p>\u{1F511}\u901A\u8FC7\u4E0A\u9762\u7684\u8F93\u51FA\u6211\u4EEC\u53EF\u4EE5\u77E5\u9053\u9ED8\u8BA4\u7684 descriptor</p><div class="language-js"><pre><code><span class="token punctuation">{</span><span class="token string-property property">&quot;writable&quot;</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token string-property property">&quot;enumerable&quot;</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token string-property property">&quot;configurable&quot;</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">}</span> 
</code></pre></div><h3 id="reflect-isextensible" tabindex="-1">Reflect.isExtensible <a class="header-anchor" href="#reflect-isextensible" aria-hidden="true">#</a></h3><p>Reflect.isExtensible (target)</p><ul><li>\u8FD4\u56DE boolean \u8868\u793A target \u662F\u5426\u53EF\u6269\u5C55</li></ul><h3 id="reflect-preventextension" tabindex="-1">Reflect.preventExtension <a class="header-anchor" href="#reflect-preventextension" aria-hidden="true">#</a></h3><p>Reflect.preventExtension(target)</p><ul><li>\u4F7F\u5F97 target \u4E0D\u53EF\u6269\u5C55(\u4E0D\u53EF\u65B0\u589E\u5C5E\u6027 / \u53EF\u4EE5 get \u548C delete)</li></ul><div class="language-js"><pre><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Reflect<span class="token punctuation">.</span><span class="token function">preventExtensions</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span> <span class="token comment">// true</span>

myObject<span class="token punctuation">.</span>hello <span class="token operator">=</span> <span class="token string">&#39;hahah&#39;</span> <span class="token comment">// \u4E0D\u62A5\u9519\u4F46\u662F\u4E0D\u751F\u6548</span>
</code></pre></div><h3 id="reflect-ownkeys" tabindex="-1">Reflect.ownKeys <a class="header-anchor" href="#reflect-ownkeys" aria-hidden="true">#</a></h3><p>Reflect.ownKeys (target)</p><ul><li>\u8FD4\u56DE\u5BF9\u8C61\u6240\u6709\u7684\u5C5E\u6027</li></ul><div class="language-js"><pre><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;baz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;bing&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u65E7\u5199\u6CD5</span>
Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span>
<span class="token comment">// [&#39;foo&#39;, &#39;bar&#39;]</span>

Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span>
<span class="token comment">//[Symbol(baz), Symbol(bing)]</span>

<span class="token comment">// \u65B0\u5199\u6CD5 -- \u7B49\u540C\u4E8E\u4E0A\u9762\u4E24\u4E2A\u4E4B\u548C</span>
Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span>
<span class="token comment">// [&#39;foo&#39;, &#39;bar&#39;, Symbol(baz), Symbol(bing)]</span>
</code></pre></div><h2 id="proxy" tabindex="-1">Proxy <a class="header-anchor" href="#proxy" aria-hidden="true">#</a></h2><ul><li>[x] \u91CD\u65B0\u5B66\u4E60\u7684\u76EE\u6807\u662F\u641E\u6E05\u695A proxy \u5B9E\u4F8B \u548C target \u7684\u533A\u522B</li></ul><ul><li>\u91CC\u9762\u7684\u4E00\u4E9B\u65B9\u6CD5\u548C Reflect \u662F\u4E00\u6837\u7684\uFF0C\u53C2\u6570\u4E5F\u662F\u4E00\u6837\u7684\uFF0C\u53EF\u4EE5\u8FD9\u4E48\u53BB\u7406\u89E3\uFF0Cproxy \u662F\u4E00\u4E2A\u4EE3\u7406\u5668\uFF0C\u5F53\u6211\u4EEC\u89E6\u53D1 proxy \u7684\u4E00\u4E9B\u62E6\u622A\u7684\u8BDD\u4F1A\u4F7F\u7528 Reflect \u6765\u66F4\u65B0\u5BF9\u8C61\u3002</li></ul><p>\u2B50 \u76D1\u542C\u4EE5\u4E0B\u7684\u4E00\u4E9B\u65B9\u6CD5\u8BBE\u7F6E</p><ul><li>get</li><li>set</li><li>has</li><li>deleteProerty</li><li>constructor</li><li>getPrototypeOf</li><li>setPrototypeOf</li><li>apply</li><li>defineProperty</li><li>getOwnProtertyDescriptor</li><li>isExtensible</li><li>preventExtension</li><li>ownKeys</li></ul><h2 id="\u751F\u6210\u5668-\u8FED\u4EE3\u5668" tabindex="-1">\u751F\u6210\u5668 &amp; \u8FED\u4EE3\u5668 <a class="header-anchor" href="#\u751F\u6210\u5668-\u8FED\u4EE3\u5668" aria-hidden="true">#</a></h2><ul><li>\u8C03\u7528 Generator \u51FD\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\u5BF9\u8C61\uFF0C\u4EE3\u8868 Generator \u51FD\u6570\u5185\u90E8\u6307\u9488\u3002\u4EE5\u540E\u6BCF\u6B21\u8C03\u7528\u904D\u5386\u5668\u7684 next \u65B9\u6CD5\uFF0C\u5C31\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u6709\u7740 value \u548C done \u4E24\u4E2A\u5C5E\u6027\u7684\u5BF9\u8C61\u3002</li><li>value - yield \u8868\u8FBE\u5F0F\u540E\u9762\u7684\u503C</li><li>done - \u4EE3\u8868\u904D\u5386\u662F\u5426\u7ED3\u675F</li></ul><p>\u2B50 \u672C\u8D28\u4E0A\uFF0Cgenerator \u662F\u57FA\u4E8E\u534F\u7A0B\u6765\u5B9E\u73B0\u7684\uFF0C\u6240\u6709\u5728\u4E00\u4E2A\u51FD\u6570\u5185\u90E8\u624D\u4F1A\u6709\u72B6\u6001\u8FD9\u4E2A\u6982\u5FF5\u3002\u534F\u7A0B\u662F\u4E0D\u53D7\u64CD\u4F5C\u7CFB\u7EDF\u63A7\u5236\u7684\uFF0C\u5355\u7EAF\u7531\u7528\u6237\u63A7\u5236(\u6BD4\u5982\u751F\u6210\u5668\u7684 next \u65B9\u6CD5)\uFF0C\u624D\u4F1A\u53D1\u751F\u72B6\u6001\u7684\u8F6C\u6362\u3002</p><h3 id="for-of" tabindex="-1">for...of <a class="header-anchor" href="#for-of" aria-hidden="true">#</a></h3><p>for...of \u5FAA\u73AF\u53EF\u4EE5\u81EA\u52A8\u904D\u5386 Generator \u51FD\u6570\u8FD0\u884C\u65F6\u751F\u6210\u7684 Interator \u5BF9\u8C61\uFF0C\u4E14\u4E0D\u9700\u8981\u518D\u8C03\u7528 next \u65B9\u6CD5\u3002</p><p>\u6211\u4EEC\u4E5F\u90FD\u77E5\u9053\u5BF9\u8C61\u5176\u5B9E\u662F\u4E0D\u53EF\u4EE5\u4F7F\u7528 for...of \u53BB\u904D\u5386\u7684\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u751F\u6210\u5668\u6765\u5BF9\u5BF9\u8C61\u8FDB\u884C\u6539\u9020</p><div class="language-js"><pre><code><span class="token comment">// \u7B2C\u4E00\u79CD\u65B9\u6CD5</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">objectEntries</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Reflect.ownkeys \u62FF\u5230\u5BF9\u8C61\u6240\u6709\u7684\u952E\u503C\u5305\u62EC symbol</span>
  <span class="token keyword">let</span> propKeys <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
    <span class="token comment">// \u904D\u5386\u5BF9\u8C61\u7684\u5C5E\u6027\u7136\u540E\u901A\u8FC7 yield \u53BB\u64CD\u4F5C</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> propKey <span class="token keyword">of</span> propKeys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token punctuation">[</span>propKey<span class="token punctuation">,</span> obj<span class="token punctuation">[</span>propKey<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> jane <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">first</span><span class="token operator">:</span> <span class="token string">&#39;Jane&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">last</span><span class="token operator">:</span> <span class="token string">&#39;Doe&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> <span class="token function">objectEntries</span><span class="token punctuation">(</span>jane<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token comment">// \u7B2C\u4E8C\u79CD\u65B9\u6CD5\uFF1A\u5BF9\u8C61\u5185\u90E8\u65B0\u589E [Symbol.interator]: function* (){}</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">objectEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> propKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> propKey <span class="token keyword">of</span> propKeys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token punctuation">[</span>propKey<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>propKey<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> jane <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">first</span><span class="token operator">:</span> <span class="token string">&#39;Jane&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">last</span><span class="token operator">:</span> <span class="token string">&#39;Doe&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

jane<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> objectEntries<span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> jane<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u2B50 \u9700\u8981\u6E05\u695A\u7684\u4E00\u70B9\u662F\uFF0C\u65E0\u8BBA\u662F for...of / \u6269\u5C55\u8FD0\u7B97\u7B26 / Array.from \u90FD\u662F\u53EF\u4EE5\u5C06 Generator \u8FD4\u56DE\u7684 interator \u4F5C\u4E3A\u53C2\u6570\uFF0C\u4F46\u662F\u9047\u5230 done \u4E3A true \u7684\u8BDD\u5C31\u4F1A\u9A6C\u4E0A\u505C\u6B62\u904D\u5386\u3002</p><h3 id="generator-prototype-next" tabindex="-1">Generator.prototype.next() <a class="header-anchor" href="#generator-prototype-next" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token comment">// \u91C7\u7528\u751F\u6210\u5668\u5B9E\u73B0\u5EF6\u65F6\u6267\u884C\u51FD\u6570\u7684\u6548\u679C</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6267\u884C\u4E86\uFF01&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> generator <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  generator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-javascript"><pre><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">dataConsumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Started&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">1 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">yield</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">2 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">yield</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> genObj <span class="token operator">=</span> <span class="token function">dataConsumer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
genObj<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// started</span>
genObj<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 1 a</span>
genObj<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 2 b</span>
</code></pre></div><ul><li>[x] 2022 / 4 / 11 \u9605\u8BFB\u5230 next \u4F20\u9012\u51FD\u6570</li></ul><h3 id="generator-prototype-throw" tabindex="-1">Generator.prototype.throw() <a class="header-anchor" href="#generator-prototype-throw" aria-hidden="true">#</a></h3><ul><li>\u6267\u884C\u4E00\u6B21 throw \u9644\u5E26\u6267\u884C\u4E00\u6B21 next</li><li>\u53EA\u6709\u6267\u884C\u8FC7\u4E00\u6B21 next\uFF0Cthrow \u4F20\u9012\u7684\u9519\u8BEF\u624D\u80FD\u88AB\u5185\u90E8\u6355\u83B7</li></ul><div class="language-js"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">g</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FD\u6570\u4F53\u5185\uFF1A&#39;</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
i<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
i<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FA\u9519\u4E86~~~~&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FDB\u5165\u51FD\u6570\u4F53\u5185\u9519\u8BEF\u6355\u83B7</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    i<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FA\u9519\u4E86~~~~~&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u8FDB\u5165\u51FD\u6570\u4F53\u5916\u9519\u8BEF\u6355\u83B7</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FD\u6570\u4F53\u5916\uFF1A&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u2B50\u533A\u522B\u4E8E\u5168\u5C40\u4E0A\u7684 throw \u51FD\u6570\uFF0Cthrow \u53EA\u80FD\u88AB\u51FD\u6570\u4F53\u5916\u7684 catch \u8BED\u53E5\u6355\u83B7\u3002\u540C\u65F6\u4E0E\u5176\u4ED6\u9519\u8BEF\u7C7B\u4F3C\uFF0C\u5982\u679C\u6CA1\u6709\u8FDB\u884C\u6B63\u786E\u7684\u9519\u8BEF\u5904\u7406\u6D41\u7A0B\uFF0C\u7A0B\u5E8F\u5C06\u4F1A\u62A5\u9519(\u4E5F\u5C31\u662F throw \u4E86\u4F46\u662F\u4F60\u6CA1\u6709\u4F7F\u7528 try ... catch \u8FDB\u884C\u9519\u8BEF\u5904\u7406)</p><h3 id="generator-prototype-return" tabindex="-1">Generator.prototype.return() <a class="header-anchor" href="#generator-prototype-return" aria-hidden="true">#</a></h3><p>Generator \u51FD\u6570\u8FD4\u56DE\u7684\u904D\u5386\u5668\u5BF9\u8C61\uFF0C\u8FD8\u6709\u4E00\u4E2A return \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u8FD4\u56DE\u7ED9\u5B9A\u7684\u503C\uFF0C\u5E76\u4E14\u7EC8\u7ED3\u904D\u5386 Generator \u51FD\u6570\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// { value: 1, done: false }</span>
g<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token comment">// { value: &quot;foo&quot;, done: true }</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// { value: undefined, done: true }</span>
</code></pre></div><h3 id="yield" tabindex="-1">yield* <a class="header-anchor" href="#yield" aria-hidden="true">#</a></h3><p>\u5E38\u7528\u5728\u4E00\u4E2A Generator \u51FD\u6570\u5185\u90E8\u8C03\u7528\u53E6\u5916\u4E00\u4E2A Generator \u7684\u60C5\u51B5\u3002yield* \u8868\u793A\u540E\u9762\u63A5\u7740\u7684\u662F\u4E00\u4E2A\u904D\u5386\u5668\u5BF9\u8C61\u3002</p><p>\u{1F31F}\u53EF\u4EE5\u8FD9\u4E48\u53BB\u7406\u89E3\uFF1Ayield* \u8868\u8FBE\u5F0F\u5176\u5B9E\u5C31\u662F\u5C06 Generator \u8F6C\u5316\u4E3A \u591A\u4E2A yield \u5B50\u8868\u8FBE\u5F0F\u7684\u8FC7\u7A0B\uFF0C\u7136\u540E\u5728\u7236 Generator \u518D\u904D\u5386\u7684\u8FC7\u7A0B\u3002</p><div class="language-js"><pre><code><span class="token comment">// \u5982\u679C\u88AB\u4EE3\u7406\u7684 Generator \u51FD\u6570\u6709return\u8BED\u53E5\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u5411\u4EE3\u7406\u5B83\u7684 Generator \u51FD\u6570\u8FD4\u56DE\u6570\u636E</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> v <span class="token operator">=</span> <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u63A5\u53D7 foo \u8FD4\u56DE\u7684\u6570\u636E</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;v: &quot;</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> it <span class="token operator">=</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// {value: 1, done: false}</span>
it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// {value: 2, done: false}</span>
it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// {value: 3, done: false}</span>
it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &quot;v: foo&quot;</span>
<span class="token comment">// {value: 4, done: false}</span>
it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// {value: undefined, done: true}</span>
</code></pre></div><ul><li>\u4F7F\u7528 yield \u5B9E\u73B0\u6570\u7EC4\u7684 flat \u6241\u5E73\u5316</li></ul><div class="language-js"><pre><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">iterTree</span><span class="token punctuation">(</span><span class="token parameter">tree</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tree<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">iterTree</span><span class="token punctuation">(</span>tree<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> tree<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> tree <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> <span class="token function">iterTree</span><span class="token punctuation">(</span>tree<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u7684-generator-\u51FD\u6570" tabindex="-1">\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u7684 Generator \u51FD\u6570 <a class="header-anchor" href="#\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u7684-generator-\u51FD\u6570" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u524D\u9762\u4F7F\u7528 * \u6807\u8BC6\u662F Generator \u51FD\u6570</span>
    <span class="token operator">*</span><span class="token function">myGeneratorMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="generator-\u51FD\u6570\u7684-this" tabindex="-1">Generator \u51FD\u6570\u7684 this <a class="header-anchor" href="#generator-\u51FD\u6570\u7684-this" aria-hidden="true">#</a></h3><ul><li><p>Generator \u4E0D\u80FD\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u4F7F\u7528</p></li><li><p>Generator \u539F\u578B\u4E0A\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\u53EF\u4EE5\u88AB\u7EE7\u627F</p></li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token operator">*</span><span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">yield</span> <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u901A\u8FC7\u5C01\u88C5\u51FD\u6570\u7684\u65B9\u5F0F\u4F7F\u5F97 Generator \u72B6\u6001\u673A\u53EF\u4EE5\u4F5C\u4E3A\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">Fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">gen</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>gen<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
obj<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
obj<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>a<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>b<span class="token punctuation">)</span>
</code></pre></div><h3 id="\u5B9E\u9645\u5E94\u7528" tabindex="-1">\u5B9E\u9645\u5E94\u7528 <a class="header-anchor" href="#\u5B9E\u9645\u5E94\u7528" aria-hidden="true">#</a></h3><ul><li>\u5F02\u6B65\u64CD\u4F5C\u540C\u6B65\u5316\u8868\u8FBE</li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token operator">*</span><span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">loadingData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u52A0\u8F7D\u52A8\u753B</span>
    <span class="token keyword">yield</span> <span class="token function">renderData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6E32\u67D3\u6570\u636E</span>
    <span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u9690\u85CF\u52A0\u8F7D\u52A8\u753B</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u4E00\u5F00\u59CB\u4E0D\u4F1A\u6267\u884C</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6267\u884C\u5230 renderData</span>
<span class="token comment">// renderData \u91CC\u9762\u518D\u8C03\u7528 g.next() \u4ECE\u800C\u9690\u85CF\u52A0\u8F7D\u52A8\u753B</span>
</code></pre></div><ul><li>\u90E8\u7F72 Interator \u63A5\u53E3</li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">setUpInterator</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65B9\u6CD5\u4E00\u5C31\u662F\u901A\u8FC7\u5F80\u5BF9\u8C61\u4E0A\u6DFB\u52A0 Symbol.inerator \u5C5E\u6027\u6765\u5B9E\u73B0\u53EF\u8FED\u4EE3</span>
    obj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">yield</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u2B50 \u603B\u7684\u6765\u8BF4\uFF0Cgenerator \u4F5C\u4E3A\u751F\u6210\u5668\u51FD\u6570\uFF0C\u4E0D\u50CF\u666E\u901A\u51FD\u6570\u8C03\u7528\u540E\u5C31\u6267\u884C\u3002\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u8FED\u4EE3\u5668\u5BF9\u8C61\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7 for ... of \u6765\u8FDB\u884C\u8FED\u4EE3\u3002\u5185\u90E8\u901A\u8FC7 yield \u5173\u952E\u5B57\u6765\u5B9E\u73B0\u72B6\u6001\u673A\u7684\u5207\u6362\uFF0C\u6BCF next \u4E00\u6B21\u6267\u884C\u5230 yield \u7684\u65F6\u5019\u5C31\u4EA4\u51FA\u5BF9\u5E94\u7684\u6267\u884C\u6743\u9650\uFF0C\u5BF9\u5E94\u7684\u4E0A\u4E0B\u6587\u4F1A\u88AB\u7F13\u5B58\u8D77\u6765\uFF0C\u7B49\u5230\u4E0B\u6B21\u53D6\u5230\u72B6\u6001\u6267\u884C\u6743\u540E\u518D\u5165\u6808</p><h3 id="generator-\u5F02\u6B65" tabindex="-1">Generator \u5F02\u6B65 <a class="header-anchor" href="#generator-\u5F02\u6B65" aria-hidden="true">#</a></h3><p>\u2757 ES6 \u5F15\u5165 Generator \u4E4B\u524D\u4E5F\u6709\u51E0\u79CD\u65B9\u6CD5\u89E3\u51B3JS\u540C\u6B65\u963B\u585E\u7684\u95EE\u9898\uFF0C\u5E38\u89C1\u7684\u6709\u56DE\u8C03\u51FD\u6570 / Promise\u3002\u56DE\u8C03\u51FD\u6570\u53EF\u80FD\u51FA\u73B0\u7684\u95EE\u9898\u662F\u591A\u4E2A\u56DE\u8C03\u4E4B\u95F4\u5B58\u5728\u5F3A\u8026\u5408\u5173\u7CFB\u5BFC\u81F4\u4E00\u4E2A\u64CD\u4F5C\u4FEE\u6539\u4F1A\u5F71\u54CD\u5230\u5176\u4ED6\u64CD\u4F5C\uFF0C\u4E0D\u65AD\u5D4C\u5957\u7684\u8FC7\u7A0B\u5C31\u5BFC\u81F4\u4E86\u201D\u56DE\u8C03\u5730\u72F1\u201C\u7684\u95EE\u9898\u3002\u7531\u6B64\u5F15\u51FA\u4E86 Promise\uFF0C\u901A\u8FC7 .then .... \u76F4\u89C2\u4E0A\u540C\u6B65\u7684\u65B9\u5F0F\u89E3\u51B3\u4E86\u5D4C\u5957\u95EE\u9898\uFF0C\u4F46\u662F\u7A0D\u5FAE\u6709\u70B9\u4E0D\u597D\u7684\u5C31\u662F\u9700\u8981\u5C01\u88C5\u591A\u4E00\u5C42 Promise \u5BF9\u8C61\u5BFC\u81F4\u8BED\u4E49\u4E0D\u6E05\u6670\u3002</p><p>\u2B50 Generator \u7684\u5F15\u51FA\u89E3\u51B3\u4E86\u4E0A\u9762\u95EE\u9898\uFF0C\u672C\u8D28\u4E0A\u57FA\u4E8E\u534F\u7A0B\u5B9E\u73B0\uFF0C\u53EF\u4EE5\u63A7\u5236\u6267\u884C\u65F6\u673A\u4E14\u5185\u90E8\u4EE3\u7801\u770B\u4E0A\u53BB\u548C\u540C\u6B65\u7684\u65B9\u5F0F\u4E00\u6A21\u4E00\u6837\uFF0C\u8BED\u4E49\u975E\u5E38\u6E05\u6670\uFF0C\u540C\u65F6\u5916\u90E8\u7684\u9519\u8BEF\u53EF\u4EE5\u5728\u5185\u90E8\u8FDB\u884C\u6355\u83B7\u3002</p><ul><li>thunk \u5305\u88C5</li></ul><div class="language-js"><pre><code><span class="token comment">// \u672C\u8D28\u4E0A\u662F\u901A\u8FC7\u5C06 next \u4F5C\u4E3A fn \u7684\u56DE\u8C03\u51FD\u6570\u4F20\u5165</span>
<span class="token comment">// \u7B49\u5230 fn \u6267\u884C\u56DE\u8C03\u7684\u65F6\u5019\u518D\u6062\u590D Generator \u7684\u6267\u884C\u6743</span>
<span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> gen <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token function">next</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;filename&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u91CC\u901A\u8FC7\u8FD9\u4E48\u4E00\u79CD\u65B9\u5F0F\u6765\u6A21\u62DF</span>
  <span class="token punctuation">}</span>

  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// thunk \u5305\u88C5\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">thunk</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6A21\u62DF\u8BFB\u53D6\u6587\u4EF6\u7684\u5F02\u6B65\u56DE\u8C03</span>
<span class="token keyword">function</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token parameter">filename<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    callbacl <span class="token operator">=</span> callback <span class="token operator">?</span> <span class="token function-variable function">callback</span> <span class="token operator">:</span>  <span class="token keyword">function</span><span class="token punctuation">(</span>err<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string">&#39;data&#39;</span> <span class="token punctuation">}</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> readFileThunk <span class="token operator">=</span> <span class="token function">thunk</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span>

<span class="token keyword">var</span> <span class="token function-variable function">g</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> f1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFileThunk</span><span class="token punctuation">(</span><span class="token string">&#39;file1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">)</span>
  <span class="token keyword">var</span> f2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFileThunk</span><span class="token punctuation">(</span><span class="token string">&#39;file2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f2<span class="token punctuation">)</span>
  <span class="token keyword">var</span> f3 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFileThunk</span><span class="token punctuation">(</span><span class="token string">&#39;file3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f3<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">run</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u{1F42F} \u5176\u5B9E CO \u7684 promise \u5C01\u88C5\u548C run \u65B9\u6CD5\u662F\u7C7B\u4F3C\u7684\uFF0C\u53EA\u662F\u6362\u6210\u4E86 Promise.then \u7684\u65B9\u5F0F\u8FDB\u884C\u56DE\u8C03\u7684\u4F20\u5165</p><h2 id="class-\u7C7B" tabindex="-1">Class \u7C7B <a class="header-anchor" href="#class-\u7C7B" aria-hidden="true">#</a></h2><p>\u5176\u5B9E Class \u672C\u8D28\u4E0A\u8FD8\u662F\u4F7F\u7528\u51FD\u6570\u53BB\u5B9E\u73B0\u7684\uFF0CClass \u53EA\u662F\u65B9\u4FBF\u6211\u4EEC\u4F7F\u7528\u7684\u4E00\u79CD\u8BED\u6CD5\u7CD6\uFF0C\u5E76\u4E0D\u662F\u50CFJava \u6216\u8005 C \u91CC\u9762\u5B58\u5728\u771F\u6B63\u7C7B\u7684\u5B9A\u4E49\u3002\u6240\u4EE5\u8FD8\u662F\u5B58\u5728\u539F\u578B &amp; \u539F\u578B\u94FE\u7684\u6982\u5FF5\uFF0C\u89C4\u5219\u5176\u5B9E\u4E5F\u548C ES5 \u4E2D\u662F\u4E00\u6837\u7684\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Point</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6784\u9020\u51FD\u6570</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
<span class="token punctuation">}</span>
<span class="token class-name">Point</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">toString</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E0A\u9762\u7684\u58F0\u660E\u7B49\u4EF7\u4E8E</span>
Class Point <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x
        <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y
    <span class="token punctuation">}</span>
    <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u{1F511} \u7C7B\u7684\u6240\u6709\u65B9\u6CD5\u90FD\u5728\u539F\u578B\u5BF9\u8C61\u4E0A</p><p>\u26A0\uFE0F \u9ED8\u8BA4\u6709\u4E00\u4E2A constructor \u51FD\u6570\u8FD4\u56DE this \u5BF9\u8C61\uFF0C\u5982\u679C\u66F4\u6539\u4E3A\u8FD4\u56DE\u5176\u4ED6\u5BF9\u8C61\uFF0C\u53EF\u80FD\u5BFC\u81F4\u7684\u95EE\u9898\u662F\u4E0D\u80FD\u8FDB\u884C\u5B9E\u4F8B\u7EE7\u627F\u548C\u539F\u578B\u7EE7\u627F\u3002</p><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// \u8986\u76D6\u4E86\u539F\u6765\u9ED8\u8BA4\u8FD4\u56DE this \u7684\u884C\u4E3A</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
</code></pre></div><div class="language-js"><pre><code>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// \u751F\u4EA7\u73AF\u5883\u5EFA\u8BAE\u4F7F\u7528\u8FD9\u79CD\u65B9\u5F0F\u83B7\u53D6\u539F\u578B\u5BF9\u8C61</span>
</code></pre></div><h3 id="getter-setter" tabindex="-1">getter &amp; setter <a class="header-anchor" href="#getter-setter" aria-hidden="true">#</a></h3><ul><li>Object.getOwnPropertyDescriptor</li></ul><div class="language-js"><pre><code><span class="token comment">// Object.getOwnpropertyDescriptor \u7528\u4E8E\u83B7\u53D6\u67D0\u4E2A\u5C5E\u6027\u7684\u63CF\u8FF0\u7B26</span>
<span class="token comment">// \u4E5F\u5C31\u662F { configurable, writable, enumerable, value }</span>
<span class="token comment">// \u540C\u65F6\u4E5F\u8BF4\u660E\u4E86\u4E00\u4E2A\u95EE\u9898 \u5BF9\u5E94\u7684 getter \u548C setter \u662F\u5B9A\u4E49\u5728\u539F\u578B\u4E0A\u7684</span>
<span class="token comment">// \u4E14\u8FD9\u4E2A\u5C5E\u6027\u662F\u4E0D\u53EF\u679A\u4E3E\u7684\u56E0\u4E3A Object.keys \u904D\u5386\u4E0D\u51FA\u6765</span>
<span class="token keyword">var</span> descriptor <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>
  <span class="token class-name">CustomHTMLElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token string">&quot;html&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u5BF9\u8C61 { configurable, writable, enumera }</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">CustomHTMLElement</span> <span class="token punctuation">{</span>
  <span class="token keyword">get</span> <span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>innerHTML<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">set</span> <span class="token function">html</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> cus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomHTMLElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>cus<span class="token punctuation">.</span>__proto__<span class="token punctuation">,</span> <span class="token string">&#39;html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>cus<span class="token punctuation">.</span><span class="token punctuation">,</span> <span class="token string">&#39;html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// false </span>
</code></pre></div><h3 id="class-\u8868\u8FBE\u5F0F" tabindex="-1">class \u8868\u8FBE\u5F0F <a class="header-anchor" href="#class-\u8868\u8FBE\u5F0F" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> MyClass <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">Me</span> <span class="token punctuation">{</span>
  <span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Me<span class="token punctuation">.</span>name<span class="token punctuation">;</span> <span class="token comment">// Me \u53EA\u80FD\u5728\u5185\u90E8\u4F7F\u7528</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u7ACB\u5373\u6267\u884C\u7C7B =&gt; \u521B\u5EFA\u5BF9\u5E94\u7684\u5B9E\u4F8B</span>
<span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">class</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

person<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;\u5F20\u4E09&quot;</span>
</code></pre></div><h3 id="\u9759\u6001\u65B9\u6CD5-\u9759\u6001\u5C5E\u6027" tabindex="-1">\u9759\u6001\u65B9\u6CD5 &amp; \u9759\u6001\u5C5E\u6027 <a class="header-anchor" href="#\u9759\u6001\u65B9\u6CD5-\u9759\u6001\u5C5E\u6027" aria-hidden="true">#</a></h3><p>\u26A0\uFE0F \u9759\u6001\u5C5E\u6027\u5176\u5B9E\u4E00\u5F00\u59CB\u7684\u89C4\u8303\u4E2D\u662F\u5982\u4E0B\u58F0\u660E\u7684</p><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
Person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;name&#39;</span>
</code></pre></div><p>\u4F46\u662F\u8003\u8651\u5230\u8FD9\u6837\u5B50\u4E0D\u592A\u76F4\u63A5\u6240\u4EE5\u5C31\u5F15\u5165\u4E86\u53E6\u4E00\u79CD\u89C4\u8303</p><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> name <span class="token operator">=</span> <span class="token string">&#39;name&#39;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u5B9E\u4F8B\u5C5E\u6027\u7684\u65B0\u5199\u6CD5" tabindex="-1">\u5B9E\u4F8B\u5C5E\u6027\u7684\u65B0\u5199\u6CD5 <a class="header-anchor" href="#\u5B9E\u4F8B\u5C5E\u6027\u7684\u65B0\u5199\u6CD5" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">Customer</span> <span class="token punctuation">{</span>
    count <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">// \u76F4\u63A5\u58F0\u660E\u5230\u9876\u90E8</span>
    <span class="token comment">// \u4F46\u662F\u7528\u7684\u65F6\u5019\u5176\u5B9E\u8FD8\u662F\u9700\u8981 this.count</span>
    <span class="token comment">// \u53EA\u662F\u8BF4\u73B0\u5728\u4E00\u773C\u5C31\u80FD\u770B\u5230\u6709\u54EA\u4E9B\u5B9E\u4F8B\u5C5E\u6027</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="new-target" tabindex="-1">new.target <a class="header-anchor" href="#new-target" aria-hidden="true">#</a></h3><ul><li>\u5728\u51FD\u6570\u4E2D new Target \u6307\u5411\u7684\u662F\u6784\u9020\u51FD\u6570</li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">.</span>target<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// [Person Function]</span>
</code></pre></div><ul><li>\u5728\u5BF9\u8C61\u4E2D\u8FD4\u56DE\u7684\u662F\u5F53\u524D Class</li></ul><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">.</span>target<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6307\u5411 Class Person</span>
</code></pre></div><ul><li>\u5728\u7EE7\u627F\u5173\u7CFB\u4E2D\uFF0C\u6307\u5411\u7684\u662F\u5B50\u7C7B\u3002\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E00\u7279\u6027\u6765\u5B9E\u73B0\u4E00\u4E2A\u62BD\u8C61\u7C7B\uFF0C\u4E5F\u5C31\u662F\u53EA\u80FD\u88AB\u7EE7\u627F\u4E0D\u80FD\u88AB\u5B9E\u4F8B</li></ul><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token punctuation">.</span>target <span class="token operator">===</span> Person<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0D\u80FD\u88AB\u5B9E\u4F8B\u5316&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="class-\u7EE7\u627F" tabindex="-1">Class \u7EE7\u627F <a class="header-anchor" href="#class-\u7EE7\u627F" aria-hidden="true">#</a></h2><ul><li>ES6 \u7EE7\u627F\u65B9\u5F0F\u548C ES5 \u7EE7\u627F\u65B9\u5F0F\u7684\u5DEE\u522B</li></ul><p>ES6 \u7684\u7EE7\u627F\u673A\u5236\uFF0C\u662F\u5148\u5C06\u7236\u7C7B\u7684\u5C5E\u6027\u548C\u65B9\u6CD5\uFF0C\u52A0\u5230\u4E00\u4E2A\u7A7A\u7684\u5BF9\u8C61\u4E0A\u9762\uFF0C\u7136\u540E\u518D\u5C06\u8BE5\u5BF9\u8C61\u4F5C\u4E3A\u5B50\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u5373\u201C\u7EE7\u627F\u5728\u524D\uFF0C\u5B9E\u4F8B\u5728\u540E\u201D\uFF0CES5 \u6070\u6070\u76F8\u53CD\u201C\u5B9E\u4F8B\u5728\u5148\uFF0C\u7EE7\u627F\u5728\u540E\u201D\u3002\u56E0\u6B64\u5F15\u51FA\u4E86\u4E00\u7CFB\u5217\u7684\u6CE8\u610F\u4E8B\u9879\uFF0C\u5B50\u7C7B\u7684\u6784\u9020\u51FD\u6570\u5FC5\u987B\u5305\u542B super \u8C03\u7528\uFF0Cthis \u7684\u4F7F\u7528\u5FC5\u987B\u5728 super \u540E\u7B49\u7B49\u3002</p><h3 id="super" tabindex="-1">super <a class="header-anchor" href="#super" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token punctuation">{</span>
	<span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6267\u884C\u7236\u7C7B\u7684\u6784\u9020\u51FD\u6570</span>
        <span class="token comment">// \u7B49\u4EF7\u4E8E A.prototype.constructor.call(this)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>super \u53EF\u4EE5\u7528\u4F5C\u51FD\u6570\u548C\u5BF9\u8C61\u3002\u7528\u4F5C\u51FD\u6570\u65F6\u53EA\u80FD\u5728\u5B50\u7C7B\u7684\u6784\u9020\u51FD\u6570\u4E2D\u4F7F\u7528\uFF0C\u4E14\u53EA\u80FD\u4F7F\u7528\u4E00\u6B21\uFF0C\u5185\u90E8\u9ED8\u8BA4\u7684 this \u6307\u5411\u6307\u5411\u7684\u662F\u5B50\u7C7B\u7684\u6784\u9020\u51FD\u6570\uFF0C\u5176\u5B9E\u4E5F\u5C31\u662F\u5B50\u7C7B\u5B9E\u4F8B\u3002\u4F5C\u4E3A\u5BF9\u8C61\u4F7F\u7528\u7684\u65F6\u5019\uFF0C\u5982\u679C\u5728\u666E\u901A\u51FD\u6570\u4E2D\u4F7F\u7528\uFF0C this \u6307\u5411\u7684\u662F\u7236\u7C7B\u539F\u578B\u5BF9\u8C61\uFF0C\u5982\u679C\u5728\u9759\u6001\u51FD\u6570\u4E2D\u4F7F\u7528\uFF0C this \u6307\u5411\u7684\u662F\u7236\u7C7B\u3002</p></blockquote><ul><li>ES6 \u89C4\u5B9A\uFF0C\u5728\u5B50\u7C7B<em>\u666E\u901A\u65B9\u6CD5</em>\u4E2D\u901A\u8FC7 this \u8C03\u7528\u7236\u7C7B\u7684\u65B9\u6CD5\u65F6\uFF0C\u65B9\u6CD5\u5185\u90E8\u7684 this \u6307\u5411\u5F53\u524D\u7684\u5B50\u7C7B\u5B9E\u4F8B\u3002</li></ul><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9075\u5FAA\u4E0A\u9762\u7684\u89C4\u5B9A \u5B9E\u9645\u6267\u884C\u7684\u662F super.print.call(this)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
b<span class="token punctuation">.</span><span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>
</code></pre></div><ul><li>ES6 \u89C4\u5B9A\uFF0C\u5728\u5B50\u7C7B\u7684\u9759\u6001\u65B9\u6CD5\u4E2D\u901A\u8FC7 super \u8C03\u7528\u7236\u7C7B\u7684\u65B9\u6CD5\u65F6\uFF0C\u65B9\u6CD5\u5185\u90E8\u7684 this \u6307\u5411\u5F53\u524D\u7684\u5B50\u7C7B\uFF0C\u800C\u4E0D\u662F\u5B50\u7C7B\u7684\u5B9E\u4F8B\u3002</li></ul><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// \u5B9E\u4F8B\u5C5E\u6027</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token constant">B</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// \u9759\u6001\u5C5E\u6027</span>
<span class="token constant">B</span><span class="token punctuation">.</span><span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 3</span>
</code></pre></div><p>\u26A0\uFE0F \u4E0B\u9762\u8FD9\u6BB5\u4EE3\u7801\u4E00\u76F4\u4E0D\u80FD\u591F\u7406\u89E3\uFF1F\uFF1F\uFF1F</p><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>
  constru	<span class="token function">ctor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// \u8D4B\u503C\u548C\u8BFB\u53D6\u7684\u64CD\u4F5C\u4E0D\u4E00\u6837???</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">super</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="\u539F\u578B\u94FE" tabindex="-1">\u539F\u578B\u94FE <a class="header-anchor" href="#\u539F\u578B\u94FE" aria-hidden="true">#</a></h3><p>\u6709\u4EE5\u4E0B\u89C4\u5F8B</p><ol><li>\u5B50\u7C7B\u7684 _<em>proto_</em> \u5C5E\u6027\uFF0C\u8868\u793A\u6784\u9020\u51FD\u6570\u7684\u7EE7\u627F\uFF0C\u603B\u662F\u6307\u5411\u7236\u7C7B</li><li>\u5B50\u7C7B\u7684 prototype \u7684 _<em>proto_</em> \u5C5E\u6027\uFF0C\u8868\u793A\u539F\u578B\u65B9\u6CD5\u7684\u7EE7\u627F\uFF0C\u603B\u662F\u6307\u5411\u7236\u7C7B\u7684 prototype \u5C5E\u6027</li></ol><div class="language-js"><pre><code><span class="token comment">// \u5177\u4F53\u7684\u5B9E\u73B0\u6D41\u7A0B</span>
<span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">A</span><span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token constant">B</span><span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token constant">A</span> <span class="token comment">// true</span>
<span class="token class-name">B</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">A</span><span class="token punctuation">.</span>prototype <span class="token comment">// true</span>

<span class="token comment">// B \u7684\u5B9E\u4F8B\u7EE7\u627F A \u7684\u5B9E\u4F8B</span>
Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token class-name">B</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token class-name">A</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u4EF7\u4E8E B.prototype.__proto__ = A.prototype</span>

<span class="token comment">// B \u7EE7\u627F A \u7684\u9759\u6001\u5C5E\u6027</span>
Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u4EF7\u4E8E B.__proto = A</span>

<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><ul><li>\u5B9E\u4F8B\u5BF9\u8C61\u7684\u539F\u578B\u94FE</li></ul><p>\u2B50 \u9762\u8BD5\u7684\u65F6\u5019\u6709\u95EE\u8FD9\u4E48\u4E00\u4E2A\u95EE\u9898</p><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token keyword">extends</span> <span class="token class-name">A</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u8BF7\u95EE c \u7684\u539F\u578B\u94FE\u662F\u600E\u4E48\u7EE7\u627F\u7684</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">ColorPoint</span> <span class="token keyword">extends</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6211\u662F\u8FD9\u4E48\u7406\u89E3\u7684\uFF0CPoint \u548C ColortPoint \u90FD\u662F\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u751F\u6210 p1 \u548C p2</span>
<span class="token comment">// \u81EA\u7136\u7B26\u5408 ES5 \u4E2D\u7684\u4E00\u4E9B\u89C4\u8303\u8981\u6C42</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">ColorPoint</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span>  <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Point</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span> <span class="token comment">// true </span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> Point<span class="token punctuation">)</span> <span class="token comment">// &#39;function&#39;</span>
</code></pre></div><p>\u6839\u636E\u4E0A\u9762\u7684\u4E00\u4E9B\u8F93\u51FA\uFF1A\u5176\u5B9E Point \u548C ColorPoint \u5C31\u662F\u6784\u9020\u51FD\u6570\uFF0C\u6240\u4EE5\u5BF9\u4E8E c \u6765\u8BF4\uFF0Cc__proto__ === B.prototype\uFF0C\u800C B.prototype === A.prototype\uFF0C\u8FD9\u5C31\u662F\u8FD9\u4E2A\u95EE\u9898\u7684\u7B54\u6848</p><h3 id="\u7C7B\u5408\u5E76" tabindex="-1">\u7C7B\u5408\u5E76 <a class="header-anchor" href="#\u7C7B\u5408\u5E76" aria-hidden="true">#</a></h3><p>\u53EF\u4EE5\u62BD\u53D6\u51FA\u6765\u4E00\u4E2A mix \u51FD\u6570\uFF0C\u5B9E\u73B0\u591A\u4E2A\u7C7B\u5B9E\u4F8B\u5C5E\u6027 / \u9759\u6001\u5C5E\u6027\u7684\u5408\u5E76</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">mix</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>mixins</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">class</span> <span class="token class-name">Mix</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> mixin <span class="token keyword">of</span> mixins<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">copyProperties</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">mixin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62F7\u8D1D\u5B9E\u4F8B\u5C5E\u6027</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> mixin <span class="token keyword">of</span> mixins<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">copyProperties</span><span class="token punctuation">(</span>Mix<span class="token punctuation">,</span> mixin<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62F7\u8D1D\u9759\u6001\u5C5E\u6027</span>
    <span class="token function">copyProperties</span><span class="token punctuation">(</span><span class="token class-name">Mix</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> mixin<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62F7\u8D1D\u539F\u578B\u5C5E\u6027</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> Mix<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">copyProperties</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> key <span class="token operator">!==</span> <span class="token string">&#39;constructor&#39;</span>
      <span class="token operator">&amp;&amp;</span> key <span class="token operator">!==</span> <span class="token string">&#39;prototype&#39;</span>
      <span class="token operator">&amp;&amp;</span> key <span class="token operator">!==</span> <span class="token string">&#39;name&#39;</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> desc <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
      Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5177\u4F53\u4F7F\u7528\u7684\u65F6\u5019</span>
<span class="token keyword">class</span> <span class="token class-name">A</span> <span class="token keyword">extends</span> <span class="token class-name">mix</span><span class="token punctuation">(</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token constant">C</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// \u8FD9\u6837\u5C31\u5B9E\u73B0\u4E86\u7EE7\u627F\u591A\u4E2A\u7C7B\u4E86</span>
</code></pre></div><h2 id="iterator" tabindex="-1">Iterator <a class="header-anchor" href="#iterator" aria-hidden="true">#</a></h2><p>\u5173\u952E\u8BCD\uFF1A\u8BBF\u95EE\u63A5\u53E3\uFF1Bfor...of\uFF1B\u7ED3\u6784\u5206\u79BB</p><p>\u7279\u6027 / \u4F5C\u7528</p><ul><li>\u4E3A\u4E0D\u540C\u7684\u6570\u636E\u7ED3\u6784\u63D0\u4F9B\u4E86\u7EDF\u4E00\u7684\u8BBF\u95EE\u5F62\u5F0F</li><li>\u6570\u636E\u7ED3\u6784\u6210\u5458\u6309\u67D0\u79CD\u6B21\u5E8F\u6392\u5217</li><li>\u4E3A for...of \u904D\u5386\u63D0\u4F9B\u63A5\u53E3</li></ul><p>\u5C01\u88C5\u6570\u636E\u7ED3\u6784\u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\u5BF9\u8C61\uFF0C\u521D\u59CB\u65F6\u904D\u5386\u5668\u6307\u9488\u6307\u5411\u7ED3\u6784\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u4E0D\u65AD\u5730\u8C03\u7528 next \u65B9\u6CD5\uFF0C\u6307\u9488\u4E0D\u65AD\u540E\u79FB\u76F4\u81F3 done \u4E3A true \u4EE3\u8868\u5F53\u524D\u7ED3\u6784\u7684\u6570\u636E\u5DF2\u7ECF\u88AB\u8BBF\u95EE\u5B8C\u6210\u3002</p><div class="language-js"><pre><code><span class="token comment">// \u672C\u8D28\u4E0A\u90E8\u7F72\u4E86 Iterator \u63A5\u53E3\u5176\u5B9E\u6307\u7684\u662F\u6709 [Symbol.iterator]: function *() {} \u8FD9\u4E2A\u65B9\u6CD5</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
			<span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A next \u65B9\u6CD5\u4F7F\u5F97\u6307\u9488\u53EF\u4EE5\u5F80\u540E\u8FED\u4EE3</span>
				<span class="token keyword">return</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u{1F389} \u90E8\u7F72\u4E86\u8FED\u4EE3\u5668\u63A5\u53E3 ----&gt; \u8FD4\u56DE\u8FED\u4EE3\u5668\u5BF9\u8C61 ----&gt; \u8C03\u7528 next \u65B9\u6CD5 -----&gt; \u8FD4\u56DE\u6570\u636E\u7ED3\u6784\u5B50\u5143\u7D20</p><ul><li>\u8FED\u4EE3\u5668\u5B9E\u73B0\u94FE\u8868\u7ED3\u6784</li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Obj</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u90E8\u7F72\u63A5\u53E3</span>
<span class="token class-name">Obj</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> iterator <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">next</span><span class="token operator">:</span> next <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u8FED\u4EE3\u5668\u5BF9\u8C61</span>

  <span class="token keyword">var</span> current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span>

  <span class="token keyword">function</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5224\u65AD next \u6307\u5411\u7684\u662F\u5426\u662F null</span>
      <span class="token keyword">var</span> value <span class="token operator">=</span> current<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
      current <span class="token operator">=</span> current<span class="token punctuation">.</span>next<span class="token punctuation">;</span> <span class="token comment">// \u6307\u5411\u4E0B\u4E00\u4E2A\u6307\u9488</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> iterator<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> one <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Obj</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> two <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Obj</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">var</span> three <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Obj</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
one<span class="token punctuation">.</span>next <span class="token operator">=</span> two<span class="token punctuation">;</span>
two<span class="token punctuation">.</span>next <span class="token operator">=</span> three<span class="token punctuation">;</span>

<span class="token comment">// \u505A\u4E86\u8FD9\u4E48\u4E00\u4EF6\u4E8B { value, next: {value, next: {value, next}}  }</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">of</span> one<span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, 2, 3</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u90E8\u7F72\u8FED\u4EE3\u5668\u63A5\u53E3" tabindex="-1">\u90E8\u7F72\u8FED\u4EE3\u5668\u63A5\u53E3 <a class="header-anchor" href="#\u90E8\u7F72\u8FED\u4EE3\u5668\u63A5\u53E3" aria-hidden="true">#</a></h3><ul><li>\u5BF9\u4E8E\u7C7B\u6570\u7EC4\u5BF9\u8C61\u6765\u8BF4\uFF0C\u53EF\u4EE5\u76F4\u63A5\u62F7\u8D1D Array.prototype \u7684\u8FED\u4EE3\u5668\u63A5\u53E3</li></ul><p>\u26A0\uFE0F \u7ECF\u8FC7\u6D4B\u8BD5\uFF0C\u51FD\u6570\u7684 arguments \u5217\u8868\u5C45\u7136\u662F\u53EF\u4EE5\u8FED\u4EE3\u7684(\u53EF\u80FD\u662F\u5185\u7F6E\u4E86)</p><div class="language-js"><pre><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>
    <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span>
    <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u6B63\u5E38\u6765\u8BF4\u6211\u4EEC\u662F\u4E0D\u80FD\u901A\u8FC7 for...of \u904D\u5386obj\u7684</span>
    <span class="token comment">// \u56E0\u4E3A obj \u6CA1\u6709\u90E8\u7F72\u8FED\u4EE3\u5668\u63A5\u53E3</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> 
<span class="token punctuation">}</span>

<span class="token comment">// \u6539\u6210\u4E0B\u9762\u8FD9\u6837\u5B50\u5C31\u53EF\u4EE5\u4E86</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>
    <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span>
    <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>\u5BF9\u4E8E\u666E\u901A\u5BF9\u8C61\u6765\u8BF4\uFF0C\u9700\u8981\u6839\u636E\u81EA\u5DF1\u5B9E\u9645\u7684\u9700\u6C42\u6765\u5B9A\u5236\u8FED\u4EE3\u5668\u63A5\u53E3</li></ul><h3 id="\u8986\u76D6\u9ED8\u8BA4\u8FED\u4EE3\u5668" tabindex="-1">\u8986\u76D6\u9ED8\u8BA4\u8FED\u4EE3\u5668 <a class="header-anchor" href="#\u8986\u76D6\u9ED8\u8BA4\u8FED\u4EE3\u5668" aria-hidden="true">#</a></h3><ul><li>\u5BF9\u4E8E\u5177\u5907\u8FED\u4EE3\u5668\u63A5\u53E3\u7684\u6570\u636E\u7ED3\u6784\uFF08\u5B57\u7B26\u4E32 / \u6570\u7EC4 / etc\uFF09\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8986\u76D6\u539F\u6765\u7684\u8FED\u4EE3\u5668\u63A5\u53E3\uFF0C\u4ECE\u800C\u5728\u4E0D\u6539\u53D8\u539F\u6570\u636E\u7684\u60C5\u51B5\u4E0B\u66F4\u6539\u904D\u5386\u7684\u7ED3\u679C\u3002</li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u8986\u76D6\u539F\u6765\u7684\u8FED\u4EE3\u5668</span>
    <span class="token keyword">let</span> _first <span class="token operator">=</span> <span class="token boolean">true</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">next</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">if</span><span class="token punctuation">(</span>_first<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               _first <span class="token operator">=</span> <span class="token boolean">false</span>
                <span class="token keyword">return</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;jzyismylover&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span>
                <span class="token punctuation">}</span>
           <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
               <span class="token keyword">return</span> <span class="token punctuation">{</span>
                   <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span>
               <span class="token punctuation">}</span>
           <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>  <span class="token comment">// \u53EA\u4F1A\u8F93\u51FA jzyismylover</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// \u8FD8\u662F\u539F\u6765\u7684[1, 2, 3]</span>
</code></pre></div><h3 id="\u904D\u5386\u5668\u5BF9\u8C61\u7684-return\u3001throw" tabindex="-1">\u904D\u5386\u5668\u5BF9\u8C61\u7684 return\u3001throw <a class="header-anchor" href="#\u904D\u5386\u5668\u5BF9\u8C61\u7684-return\u3001throw" aria-hidden="true">#</a></h3><p>\u904D\u5386\u5668\u5BF9\u8C61\u9664\u4E86\u6709 next \u65B9\u6CD5\uFF0C\u8FD8\u6709 return \u548C throw \u65B9\u6CD5\u3002</p><ul><li>return \u4E3B\u8981\u7528\u4E8E\u5728 for...of \u5FAA\u73AF\u4E2D\u9047\u5230 break / throw error \u7684\u65F6\u5019\u6267\u884C { done: true } \u9000\u51FA\u5F53\u524D\u8FED\u4EE3\u72B6\u6001</li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> a1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span>
a1<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">,</span> _this <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token comment">// \u5176\u5B9E\u6570\u7EC4\u7684 iterator \u63A5\u53E3\u5C31\u7C7B\u4F3C\u8FD9\u6837\u90E8\u7F72\u7684</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                i<span class="token operator">++</span>
                <span class="token keyword">return</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">value</span><span class="token operator">:</span> _this<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">return</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u5B9A\u4E49\u4E86 return \u8BED\u6CD5\u5C31\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A done: true</span>
            <span class="token comment">// \u5426\u5219\u4F1A\u62A5\u9519 Iterator result undefined is not an object</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u63D0\u524D\u9000\u51FA\u4E86&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u5728 break \u64CD\u4F5C\u540E\u89E6\u53D1</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> a1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token comment">// 3 5</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="for-of-1" tabindex="-1">for...of <a class="header-anchor" href="#for-of-1" aria-hidden="true">#</a></h3><p>\u53EA\u8981\u90E8\u7F72\u4E86\u8FED\u4EE3\u5668\u63A5\u53E3\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u4F7F\u7528 for...of \u5BF9\u6570\u636E\u7ED3\u6784\u8FDB\u884C\u8BBF\u95EE\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0Cfor...of\u5FAA\u73AF\u5185\u90E8\u8C03\u7528\u7684\u662F\u6570\u636E\u7ED3\u6784\u7684 Symbol.iterator \u65B9\u6CD5\u3002\u5176\u5B9E\u4E0A\u9762\u4E5F\u6709\u5F88\u591A\u4F7F\u7528 for...of \u904D\u5386\u7684\u4F8B\u5B50\uFF0C\u5C31\u4E0D\u4E00\u4E00\u5217\u4E3E\u4E86\uFF0C\u4E3B\u8981\u8FD8\u662F\u4ECE\u91CC\u9762\u7684\u4E00\u4E9B\u7279\u4F8B\u8FDB\u884C\u5206\u6790\u3002</p><ol><li>\u6570\u7EC4</li></ol><div class="language-js"><pre><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;foo&quot;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//  &quot;3&quot;, &quot;5&quot;, &quot;7&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u26A0\uFE0F \u4E5F\u5C31\u662F\u8BF4 for...of \u904D\u5386\u6570\u7EC4\u7684\u65F6\u5019\u53EA\u4F1A\u904D\u5386\u6570\u5B57\u952E\uFF0C\u975E\u6570\u5B57\u952E\u4F1A\u88AB\u8DF3\u8FC7\u3002\u90A3\u5982\u679C\u6211\u628A arr.foo \u6539\u6210 arr[&#39;3&#39;] \u4F1A\u6709\u53D8\u5316\u5417\uFF1F\u5176\u5B9E\u662F\u4F1A\u6709\u7684</p><div class="language-js"><pre><code>arr<span class="token punctuation">[</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//  &quot;3&quot;, &quot;5&quot;, &quot;7&quot;, &quot;hello&quot;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5176\u5B9E\u5E94\u8BE5\u662F\u5185\u90E8\u505A\u4E86\u4E00\u4E2A parseInt / Number \u7684\u8F6C\u5316\uFF0C\u7136\u540E\u7528 isNaN \u53BB\u5224\u65AD</span>
</code></pre></div><ol start="2"><li>Map &amp; Set</li></ol><p>Map \u548C Set \u90FD\u53EF\u4EE5\u4F7F\u7528 for...of \u8FDB\u884C\u8FED\u4EE3\u904D\u5386</p><div class="language-js"><pre><code><span class="token comment">// \u533A\u522B\u5728\u4E8E Set \u8FED\u4EE3\u7684\u662F\u503C\uFF0CMap \u8FED\u4EE3\u7684\u662F\u952E\u548C\u503C</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> Set<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> Map<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><h3 id="for-in" tabindex="-1">for...in <a class="header-anchor" href="#for-in" aria-hidden="true">#</a></h3><p>for...in \u7684\u7F3A\u9677\u5728\u4E8E\u5B83\u5C06\u6240\u6709\u7684\u952E\u90FD\u770B\u6210\u662F\u5B57\u7B26\uFF0C\u6240\u4EE5\u4F1A\u628A\u6211\u4EEC\u81EA\u5B9A\u4E49\u7684\u4E00\u4E9B\u5C5E\u6027\u4E5F\u7ED9\u904D\u5386\u51FA\u6765\uFF0C\u4F46\u5176\u5B9E\u8FD9\u4E9B\u5E76\u4E0D\u662F\u6211\u4EEC\u60F3\u8981\u7684\uFF0C\u5C31\u50CF\u4E0A\u9762\u4E3E\u7684\u4E00\u4E2A\u6570\u7EC4\u4F8B\u5B50\u4E00\u6837\uFF0C\u4F1A\u628A arr.foo = &#39;hello&#39; \u7684 foo \u4E5F\u7ED9\u904D\u5386\u51FA\u6765\u3002\u6240\u4EE5\u5176\u5B9E for...in \u66F4\u9002\u5408\u7528\u4E8E\u904D\u5386\u5BF9\u8C61\uFF0C\u56E0\u4E3A\u5BF9\u8C61\u5176\u5B9E\u4E0D\u9700\u8981\u8003\u8651\u904D\u5386\u987A\u5E8F\u7684\u95EE\u9898\u3002</p><p>for... of \u7684\u5F15\u51FA\u5176\u5B9E\u5C31\u662F\u4E3A\u4E86\u7ED9\u5F00\u53D1\u4EBA\u5458\u63D0\u4F9B\u4E00\u4E2A\u7EDF\u4E00\u7684\u6570\u636E\u8BBF\u95EE\u63A5\u53E3\uFF0C\u89E3\u51B3\u4F20\u7EDFfor \u5FAA\u73AF\u590D\u6742\uFF0CforEach \u65E0\u6CD5\u4E2D\u9014\u9000\u51FA\uFF0Cfor...in \u5197\u4F59\u5C5E\u6027\u7B49\u7B49\u95EE\u9898\u3002</p><h2 id="async-\u51FD\u6570" tabindex="-1">async \u51FD\u6570 <a class="header-anchor" href="#async-\u51FD\u6570" aria-hidden="true">#</a></h2><p>async \u51FD\u6570\u5176\u5B9E\u662F Generator \u751F\u6210\u5668\u7684\u8BED\u6CD5\u7CD6</p><p>\u5173\u952E\u5B57\uFF1A\u5185\u7F6E\u6267\u884C\u5668\uFF1B\u66F4\u597D\u7684\u8BED\u4E49\uFF1B\u66F4\u5E7F\u7684\u9002\u5E94\u6027\uFF1B\u8FD4\u56DE\u503C\u662FPromise</p><p>\u2B50 async \u51FD\u6570\u4F1A\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61\uFF0C\u72B6\u6001\u53D8\u5316\u7684\u7406\u89E3\u662F\u5173\u952E</p><ul><li><p>\u5185\u90E8\u7684 return \u4F5C\u4E3A then \u51FD\u6570\u63A5\u6536\u7684\u53C2\u6570</p></li><li><p>\u5185\u90E8\u7684 throw \u76F4\u63A5\u4F5C\u4E3A catch \u6355\u83B7\u7684\u53C2\u6570</p></li><li><p>\u53EA\u6709\u5185\u90E8\u7684 await \u5168\u90E8\u6267\u884C\u5B8C\u6216\u8005\u9047\u5230 return / \u62A5\u9519\u624D\u4F1A\u66F4\u65B0\u8FD4\u56DE Promise \u7684\u72B6\u6001</p></li></ul><p>\u{1F511} \u975E\u5E38\u91CD\u8981</p><p>\u5185\u90E8\u6210\u529F\u6267\u884C\u5B8C\u6210\u4F46\u65E0 return ---&gt; Promise.state === &#39;resolve&#39; -----&gt; then \u63A5\u53D7 undefined</p><p>\u5185\u90E8\u6210\u529F\u6267\u884C\u5B8C\u6210\u6709 return ---&gt; Promise.state === &#39;resolve&#39; -------&gt; then \u63A5\u53D7 return \u7684\u503C</p><p>\u5185\u90E8\u629B\u51FA ------&gt; Promise.state === &#39;reject&#39; ---------&gt; catch \u63A5\u53D7\u62A5\u9519</p><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token number">2</span>
  <span class="token comment">// return await 2 \u7B49\u540C\u4E8E return 2</span>
<span class="token punctuation">}</span>
<span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;suc &#39;</span><span class="token operator">+</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// suc: undefined / suc: 2</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err &#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token number">2</span>
  consoo
<span class="token punctuation">}</span>
<span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;suc &#39;</span><span class="token operator">+</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;err &#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// err: ReferenceError: consoo is not defined</span>
</code></pre></div><p>\u{1F511} \u9762\u8BD5\u4E2D\u9047\u5230\u7684\u4EE3\u7801\u8003\u6838\u9898</p><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async start&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token string">&#39;tesing&#39;</span> <span class="token comment">// \u540C\u6837\u4F1A\u88AB\u6CE8\u518C\u4E3A\u5FAE\u4EFB\u52A1 -- \u53EA\u662F\u8BF4\u9A6C\u4E0A\u5C31\u4F1A\u8FDB\u884C\u76F8\u5173\u72B6\u6001\u53D8\u5316</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resovle</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;haha&#39;</span><span class="token punctuation">)</span>
    <span class="token function">resovle</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token string">&#39;testing&#39;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script start&#39;</span><span class="token punctuation">)</span>
<span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script end&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// await &#39;testing&#39; \u6211\u4EEC\u53EF\u4EE5\u8FD9\u6837\u53BB\u770B</span>
<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;testing&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6267\u884C\u540E\u9762\u7684\u4EE3\u7801</span>
    <span class="token comment">// \u4E5F\u5C31\u8BF4\u8BF4\u540E\u9762\u7684\u4EE3\u7801\u90FD\u4F1A\u88AB\u6CE8\u518C\u4E3A\u5FAE\u4EFB\u52A1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="await" tabindex="-1">await <a class="header-anchor" href="#await" aria-hidden="true">#</a></h3><p>await \u540E\u9762\u53EF\u4EE5\u5206\u4E3A\u4E24\u79CD\u60C5\u51B5\uFF1A\u90E8\u7F72\u4E86 then \u65B9\u6CD5 \u548C \u6CA1\u6709\u90E8\u7F72 then \u65B9\u6CD5</p><ol><li>\u6CA1\u6709\u90E8\u7F72 then \u65B9\u6CD5</li></ol><div class="language-js"><pre><code><span class="token keyword">await</span> <span class="token number">1</span>
<span class="token keyword">await</span> <span class="token string">&#39;hello&#39;</span>
</code></pre></div><p>\u4E0A\u9762\u8FD9\u4E9B\u4F1A\u76F4\u63A5\u6CE8\u518C\u5FAE\u4EFB\u52A1\u5C06\u53C2\u6570\u4F20\u9012\u8FDB\u5165 then \u4E2D</p><ol start="2"><li>\u90E8\u7F72\u4E86 then \u65B9\u6CD5\uFF08\u5B9A\u4E49\u4E86 then \u65B9\u6CD5\u7684\u5BF9\u8C61\uFF09</li></ol><div class="language-js"><pre><code><span class="token keyword">class</span> <span class="token class-name">Sleep</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">timeout</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>timeout <span class="token operator">=</span> timeout<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> startTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> startTime<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>timeout
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> sleepTime <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u7B49\u5F85 then \u65B9\u6CD5\u6267\u884C\u5B8C\u6210</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sleepTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1000</span>
</code></pre></div><p>\u5982\u679C\u662F\u4E0A\u9762\u8FD9\u79CD\u60C5\u51B5\u7684\u8BDD\u4F1A\u6267\u884C promise \u7684\u540C\u6B65\u4EE3\u7801\uFF0C\u7136\u540E\u8DF3\u51FA\u5F53\u524D\u6267\u884C\u51FD\u6570\uFF0C\u7B49\u5230\u6267\u884C\u65F6\u673A\u56DE\u5230\u51FD\u6570\u540E\u518D\u5C06\u5BF9\u5E94\u7684\u5FAE\u4EFB\u52A1\u8FDB\u884C\u6CE8\u518C\u3002</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;thenable&#39;</span> <span class="token operator">+</span> res<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>  <span class="token comment">// thenable res</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u672C\u8D28\u4E0A\u7684\u539F\u56E0\u662F\u56E0\u4E3A then \u8FD4\u56DE\u7684\u4E5F\u662F promise\uFF0C\u6240\u4EE5 await \u4E5F\u4F1A\u7B49\u5F85 then \u8FD4\u56DE\u7684 Promise \u72B6\u6001\u53D8\u6362\u540E\u518D\u5F80\u4E0A\u6267\u884C\uFF0C\u8FD9\u4E5F\u662F\u4E3A\u4EC0\u4E48\u90E8\u7F72\u4E86 then \u65B9\u6CD5\u7684\u5BF9\u8C61\u4F1A\u88AB\u89C6\u4E3A Promise \u5BF9\u8C61\u3002\u603B\u7ED3\u6765\u8BF4\u5C31\u662F await \u8FD4\u56DE\u7684\u7ED3\u679C\u662F\u6700\u540E\u4E00\u4E2A Promise \u5904\u7406\u6210\u529F\u7684\u7ED3\u679C\u3002</p><p>\u26A0\uFE0F \u4E3A\u4EC0\u4E48 async \u4E0D\u80FD\u7528\u5728 forEach \u4E2D\u5462\uFF1F</p><div class="language-js"><pre><code>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token operator">...</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u8FD9\u6837\u5B50\u7684\u65B9\u5F0F arr \u4E2D\u7684\u5143\u7D20\u4F1A\u540C\u65F6\u89E6\u53D1\u4E5F\u5C31\u662F\u4E0D\u4F1A\u6309\u987A\u5E8F\u8FD4\u56DE\u5BF9\u5E94\u7684\u7ED3\u679C</span>
</code></pre></div><h3 id="\u9519\u8BEF\u5904\u7406" tabindex="-1">\u9519\u8BEF\u5904\u7406 <a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FA\u9519\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u8FDB\u884C try...catch \u6355\u83B7</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6216\u8005\u4F7F\u7528 then \u6355\u83B7</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FA\u9519\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span><span class="token punctuation">(</span><span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u5185\u90E8\u5B9E\u73B0" tabindex="-1">\u5185\u90E8\u5B9E\u73B0 <a class="header-anchor" href="#\u5185\u90E8\u5B9E\u73B0" aria-hidden="true">#</a></h3><p>\u8FD0\u884C\u6D41\u7A0B</p><ol><li>\u6267\u884C\u751F\u6210\u5668\u51FD\u6570\u8FD4\u56DE\u751F\u6210\u5668\u5BF9\u8C61</li><li>\u8C03\u7528 step \u65B9\u6CD5\u6267\u884C next</li><li>\u901A\u8FC7 done: true / false \u5224\u65AD\u5F53\u524D\u662F\u5426\u7ED3\u675F</li><li>\u7ED3\u675F\u7684\u8BDD\u76F4\u63A5\u8FD4\u56DE\u5BF9\u5E94\u7684 value</li><li>\u5426\u5219\u6839\u636E Promise \u7684\u72B6\u6001\uFF1Aresolve \u6267\u884C\u4E0B\u4E00\u4E2A next \u65B9\u6CD5 / reject \u6267\u884C throw \u65B9\u6CD5</li></ol><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token parameter">genF</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> gen <span class="token operator">=</span> <span class="token function">genF</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u751F\u6210\u751F\u6210\u5668\u5BF9\u8C61</span>
        <span class="token keyword">function</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token parameter">nextF</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u90E8\u7F72\u81EA\u52A8\u6267\u884C Generator</span>
            <span class="token keyword">let</span> next
            <span class="token keyword">try</span> <span class="token punctuation">{</span> <span class="token comment">// \u9700\u8981\u6CE8\u610F\u5BF9\u5E94 try...catch \u7684\u6355\u83B7\u65F6\u673A</span>
                <span class="token comment">// \u5176\u5B9E\u53EA\u9700\u8981\u6355\u83B7 next = nextF()\u5373\u53EF</span>
                <span class="token comment">// \u56E0\u4E3A\u8FD9\u91CC\u6267\u884C\u53EF\u80FD generator.throw</span>
                next <span class="token operator">=</span> <span class="token function">nextF</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>next<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u6267\u884C\u5B8C\u6210</span>
                    <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u8FD8\u53EF\u4EE5\u5F80\u4E0B\u6267\u884C\u7684\u610F\u601D</span>
                Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>next<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> gen<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token function">step</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="modules" tabindex="-1">Modules <a class="header-anchor" href="#modules" aria-hidden="true">#</a></h2><p>\u2B50 ES6 \u6A21\u5757\u8BBE\u8BA1\u601D\u60F3\u662F\u5C3D\u91CF\u9759\u6001\u5316\uFF0C\u9759\u6001\u5316\u7684\u610F\u601D\u5C31\u662F\u4F7F\u5F97\u5728\u7F16\u8BD1\u9636\u6BB5\u5C31\u80FD\u786E\u5B9A\u6A21\u5757\u7684\u4F9D\u8D56\u5173\u7CFB\u4EE5\u53CA\u8F93\u5165\u8F93\u51FA\u53D8\u91CF\u3002</p><div class="language-js"><pre><code><span class="token comment">// \u4EE5\u524D\u4F7F\u7528 require \u5BFC\u5165\u7684\u65F6\u5019</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token comment">/* \u672C\u8D28\u4E0A\u7B49\u4EF7\u4E8E */</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
resolve <span class="token operator">=</span> fs<span class="token punctuation">.</span>resolve
</code></pre></div><p>\u2757 \u4E5F\u5C31\u662F\u8BF4 CommonJS \u5BFC\u51FA\u7684\u5176\u5B9E\u662F\u4E00\u4E2A\u6A21\u5757\u5BF9\u8C61\uFF0C\u7136\u540E\u518D\u4ECE\u5BF9\u8C61\u4E0A\u8BFB\u53D6\u65B9\u6CD5\u8FDB\u884C\u8D4B\u503C\uFF0C\u6240\u4EE5\u53EA\u6709\u8FD0\u884C\u7684\u65F6\u5019\u6211\u4EEC\u624D\u77E5\u9053\u52A0\u8F7D\u4E86\u54EA\u4E9B\u65B9\u6CD5\uFF0C\u6CA1\u6709\u529E\u6CD5\u5728\u7F16\u8BD1\u9636\u6BB5\u8FDB\u884C\u5224\u65AD\u3002</p><p>\u800C ES6 \u4F7F\u7528 import / export \u5173\u952E\u5B57\uFF0C\u672C\u8D28\u4E0A\u5BFC\u51FA\u7684\u4E0D\u662F\u4E00\u4E2A\u6A21\u5757\u5BF9\u8C61\uFF0C\u800C\u662F\u8868\u8FBE\u52A0\u8F7D\u7684\u542B\u4E49</p><div class="language-js"><pre><code><span class="token comment">// \u4ECE fs \u4E0A\u52A0\u8F7D\u4E09\u4E2A\u5C5E\u6027/\u65B9\u6CD5</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> stat<span class="token punctuation">,</span> exists<span class="token punctuation">,</span> readFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;fs&#39;</span>
</code></pre></div><h3 id="export" tabindex="-1">export <a class="header-anchor" href="#export" aria-hidden="true">#</a></h3><p>\u{1F511} export \u5411\u5916\u5BFC\u51FA\u7684\u662F\u4E00\u4E2A\u63A5\u53E3</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">v1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">v2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>

<span class="token comment">// \u63A8\u8350\u4F7F\u7528\u8FD9\u79CD\u65B9\u5F0F\u8FDB\u884C\u5BFC\u51FA</span>
<span class="token comment">// \u56E0\u4E3A\u6211\u4EEC\u4E00\u773C\u5C31\u80FD\u770B\u5230\u5BFC\u51FA\u4E86\u5565</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span>
  v1 <span class="token keyword">as</span> streamV1<span class="token punctuation">,</span> <span class="token comment">// \u4F7F\u7528 as \u5173\u952E\u5B57\u8FDB\u884C\u5BFC\u51FA\u6A21\u5757\u7684\u91CD\u547D\u540D</span>
  v2 <span class="token keyword">as</span> streamV2<span class="token punctuation">,</span>
  v2 <span class="token keyword">as</span> streamLatestVersion
<span class="token punctuation">}</span><span class="token punctuation">;</span>
               
<span class="token keyword">export</span> <span class="token number">1</span>  <span class="token comment">// Error\uFF1A\u5BFC\u51FA\u7684\u662F\u63A5\u53E3\u4E0D\u662F\u503C</span>
</code></pre></div><h3 id="import" tabindex="-1">import <a class="header-anchor" href="#import" aria-hidden="true">#</a></h3><p>\u{1F511} import \u5BFC\u5165\u7684\u662F export \u7684\u63A5\u53E3\uFF0C\u6240\u4EE5\u5BF9\u5E94\u7684\u5C5E\u6027\u6700\u597D\u4E0D\u8981\u4FEE\u6539\uFF0C\u4E5F\u5C31\u662F read-only \u5C31\u597D\u3002\u548C export \u4E00\u6837\uFF0Cimport \u540C\u6837\u5B58\u5728\u4F5C\u7528\u57DF\u63D0\u5347\uFF0C\u9ED8\u8BA4\u63D0\u5347\u5230\u5F53\u524D\u5168\u5C40\u4F5C\u7528\u57DF\u7684\u9876\u90E8\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> streamV1 <span class="token keyword">as</span> stream<span class="token punctuation">,</span> streamV2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./test.js&#39;</span>
<span class="token comment">// \u5BFC\u5165\u7684\u540D\u5B57\u5FC5\u987B\u4E0E export \u76F8\u540C</span>
<span class="token comment">// \u53EF\u4EE5\u4F7F\u7528 as \u5173\u952E\u5B57\u8FDB\u884C\u91CD\u547D\u540D</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token string">&#39;foo&#39;</span> <span class="token operator">+</span> a <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./test.js&#39;</span>
<span class="token comment">// Error\uFF1A\u56E0\u4E3A\u9759\u6001\u7F16\u8BD1\u7684\u539F\u56E0\u4E0D\u5141\u8BB8\u901A\u8FC7\u8868\u8FBE\u5F0F\u53BB\u5F15\u5165</span>

<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> moduleName <span class="token keyword">from</span> <span class="token string">&#39;./test.js&#39;</span> <span class="token comment">// \u6A21\u5757\u6574\u4F53\u5BFC\u51FA\u91CD\u547D\u540D\u4E3A moduleName</span>
moduleName<span class="token punctuation">.</span><span class="token function">getNaem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u901A\u8FC7\u7C7B\u4F3C\u8FD9\u6837\u7684\u65B9\u5F0F\u6765\u5B9E\u73B0\u8C03\u7528</span>
</code></pre></div><h3 id="export-default" tabindex="-1">export default <a class="header-anchor" href="#export-default" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> a

<span class="token comment">/* \u7B49\u4EF7\u4E8E */</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span>
	a <span class="token keyword">as</span> <span class="token keyword">default</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u{1F511} \u56E0\u6B64\u4E00\u4E2A\u6A21\u5757\u5185\u90E8\u53EA\u80FD\u4F7F\u7528\u4E00\u6B21 export default, \u591A\u6B21\u4F7F\u7528\u5C31\u4E0D\u77E5\u9053\u628A\u90A3\u4E2A\u53D8\u91CF\u547D\u540D\u4E3Adefault \u5BFC\u51FA\u3002export default \u5176\u5B9E\u662F export \u7684\u7279\u6B8A\u60C5\u51B5\uFF0C\u4EE5 default \u4F5C\u4E3A\u9ED8\u8BA4\u63A5\u53E3\u5BFC\u51FA</p><div class="language-js"><pre><code><span class="token comment">/* \u5BFC\u51FA */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \xB7\xB7\xB7</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">each</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> iterator<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \xB7\xB7\xB7</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span> each <span class="token keyword">as</span> forEach <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/* \u5BFC\u5165 */</span>
<span class="token keyword">import</span> _<span class="token punctuation">,</span> <span class="token punctuation">{</span> each<span class="token punctuation">,</span> forEach <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4E0A\u9762\u662F\u5F88\u591A\u5305\u6A21\u5757\u6BD4\u8F83\u5E38\u89C1\u7684\u5199\u6CD5 -- \u540C\u65F6\u63A5\u53D7 default \u63A5\u53E3\u548C\u5176\u4ED6\u63A5\u53E3\u7684\u5BFC\u51FA\u3002</p><p>\u2763\uFE0F !!! \u4EE5\u4E0B\u6982\u5FF5 \u5728 vite \u7684\u6A21\u5757\u5BFC\u51FA(i<strong>mport.meta.globEager</strong>)\u975E\u5E38\u91CD\u8981</p><div class="language-js"><pre><code><span class="token comment">// index.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jzyismylover&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// main.js \u5BFC\u5165</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> module <span class="token keyword">from</span> <span class="token string">&#39;./index.js&#39;</span>
<span class="token comment">/*
{
	a: 1,
	default: { name: &#39;jzyismylover&#39; }
}
*/</span>
</code></pre></div><p>\u672C\u8D28\u4E0A\u5176\u5B9E\u662F export default \u5BFC\u51FA default \u63A5\u53E3 \u548C a\u63A5\u53E3\uFF0C\u4F46\u662F\u5199\u5728\u4E00\u8D77\u7684\u8BDD\u4E0D\u662F\u90A3\u4E48\u5BB9\u6613\u53BB\u7406\u89E3</p><h3 id="export-import-\u590D\u5408\u5199\u6CD5" tabindex="-1">export &amp; import \u590D\u5408\u5199\u6CD5 <a class="header-anchor" href="#export-import-\u590D\u5408\u5199\u6CD5" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token punctuation">{</span> <span class="token keyword">for</span><span class="token punctuation">,</span> bar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;module&#39;</span>

<span class="token comment">/* \u7B49\u4EF7\u4E8E */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> foo<span class="token punctuation">,</span> bar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;module&#39;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span>
	foo<span class="token punctuation">,</span>
    bar
<span class="token punctuation">}</span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token punctuation">{</span> foo <span class="token keyword">as</span> <span class="token keyword">default</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;module&#39;</span>

<span class="token comment">/* \u7B49\u4EF7\u4E8E */</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;module&#39;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> foo
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token punctuation">{</span> <span class="token keyword">default</span> <span class="token keyword">as</span> foo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;module&#39;</span>

<span class="token comment">/* \u7B49\u4EF7\u4E8E */</span>
<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">&#39;module&#39;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span>
	foo
<span class="token punctuation">}</span>
</code></pre></div><p>\u2757 \u4F7F\u7528\u4E0A\u9762\u590D\u5408\u7684\u5199\u6CD5\u7684\u8BDD\u5185\u90E8\u662F\u65E0\u6CD5\u4F7F\u7528\u5BFC\u5165\u7684\u53D8\u91CF\uFF0C\u8FD9\u70B9\u9700\u8981\u6CE8\u610F\uFF01\uFF01\uFF01</p><h3 id="\u8DE8\u6A21\u5757\u5E38\u91CF" tabindex="-1">\u8DE8\u6A21\u5757\u5E38\u91CF <a class="header-anchor" href="#\u8DE8\u6A21\u5757\u5E38\u91CF" aria-hidden="true">#</a></h3><p>\uFF01\uFF01\uFF01\u5982\u679C\u5728\u9879\u76EE\u4E2D\u4F7F\u7528\u5230\u5F88\u591A\u7684\u5E38\u91CF\uFF0C\u6BD4\u5982\u8BF4\u8DEF\u7531\uFF0C\u63A5\u53E3\u540D\uFF0C\u83DC\u5355\u540D\u7B49\u7B49\uFF0CES6 \u91CC\u9762\u63A8\u8350\u6211\u4EEC\u5EFA\u4E00\u4E2A constants \u7684\u6587\u4EF6\u5939\u6765\u5B58\u50A8\u8FD9\u4E9B\u5E38\u91CF\uFF0C\u5E76\u5C06\u4E0D\u540C\u6A21\u5757\u7684\u5E38\u91CF\u62BD\u53D6\u5230 index.js \u4E2D\uFF0C\u6700\u540E\u9700\u8981\u5BFC\u5165\u7684\u65F6\u5019\u4ECE index.js \u91CC\u9762\u5BFC\u5165\u5373\u53EF\u3002</p><div class="language-js"><pre><code><span class="token comment">// constants/menu.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

<span class="token comment">// constants/route.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

<span class="token comment">// constants/index.js</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> menu <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./menu.js&#39;</span>
<span class="token keyword">export</span> <span class="token punctuation">{</span> routes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./route.js&#39;</span> 

<span class="token comment">// \u5916\u90E8\u4F7F\u7528\u7684\u65F6\u5019</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> menu <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;constants/index.js&#39;</span>
</code></pre></div><h3 id="import-1" tabindex="-1">import() <a class="header-anchor" href="#import-1" aria-hidden="true">#</a></h3><p>\u{1F511} \u662F ES2020 \u63D0\u51FA\u7684\u8FD0\u884C\u65F6\u52A0\u8F7D\u7684\u624B\u6BB5\uFF0C\u8FD4\u56DE\u4E00\u4E2A promise. \u5728 Vue \u4E2D\u61D2\u52A0\u8F7D\u8DEF\u7531\u6709\u8FD0\u7528\u5230</p><div class="language-js"><pre><code><span class="token comment">// index.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;jzyismylover&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;./index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">module</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>module<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">/*
module: {
	a: &#39;1&#39;,
	default: { name: &#39;jzyismylover&#39; }
}
*/</span>
<span class="token comment">//---------------------------------</span>
<span class="token comment">/*
\u4EC5\u6709 export default \u7684\u60C5\u51B5
module: {
	default: { name: &#39;jzyismylover&#39; }
}
*/</span>
<span class="token comment">//----------------------------------</span>
<span class="token comment">/*
\u4EC5\u6709 export \u7684\u60C5\u51B5
module: {
	a: 1
}
*/</span>
</code></pre></div>`,348),c=[e];function l(u,k,i,r,d,m){return a(),s("div",null,c)}var g=n(o,[["render",l]]);export{f as __pageData,g as default};
